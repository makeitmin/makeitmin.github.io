<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[makeitmin.io]]></title><description><![CDATA[휘발되지 않는 멋쟁이 개발자 되기]]></description><link>https://makeitmin.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 06 Aug 2021 10:08:40 GMT</lastBuildDate><item><title><![CDATA[VirtualBox + PuTTY 환경 구성하기]]></title><description><![CDATA[회사에서 사용하기로 한 개발환경은 VirtualBox에 가상 환경을 올리고, PuTTY를 통해 접속하는 형태이다. 가상 환경은 이미 만들어두신 OVA…]]></description><link>https://makeitmin.github.io/TIL/virtualbox-+-putty-환경-구성하기/</link><guid isPermaLink="false">https://makeitmin.github.io/TIL/virtualbox-+-putty-환경-구성하기/</guid><pubDate>Fri, 06 Aug 2021 09:09:16 GMT</pubDate><content:encoded>&lt;p&gt;회사에서 사용하기로 한 개발환경은 VirtualBox에 가상 환경을 올리고, PuTTY를 통해 접속하는 형태이다. 가상 환경은 이미 만들어두신 OVA 형식의 이미지가 있어서, 복사를 받아서 올리기만 하면 됐다. 각 환경 구성 방법과 오류가 발생하여 해결한 기록을 남겨두려고 한다.&lt;/p&gt;
&lt;h2 id=&quot;virtualbox-환경-구성하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#virtualbox-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0&quot; aria-label=&quot;virtualbox 환경 구성하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VirtualBox 환경 구성하기&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;VirtualBox 설치 파일과 확장팩 다운로드하기&lt;/strong&gt;&lt;br&gt;
&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox 공식 홈페이지&lt;/a&gt;의 &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;다운로드&lt;/a&gt; 카테고리에 접속하면 설치 파일을 받을 수 있다. &lt;strong&gt;VirtualBox [버전] platform pakages&lt;/strong&gt; 의 하단에 있는 링크 중에 선택하면 된다. 현재 VirtualBox를 설치하려는 환경은 Windows 이므로 Windows hosts 링크를 선택했다. 다운로드가 완료되면 &lt;code class=&quot;language-text&quot;&gt;VirtualBox-[버전]-145957-Win.exe&lt;/code&gt; 실행 파일이 로컬에 저장된다.&lt;br&gt;
바로 아래에 &lt;strong&gt;VirtualBox [버전] Oracle VM VirtualBox Extension Pack&lt;/strong&gt;의 하단에 있는 All platforms 링크를 클릭해서 확장팩도 저장한다.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VirtualBox 설치 진행하기&lt;/strong&gt;&lt;br&gt;
설치 파일을 실행하면 설치를 진행할 수 있고, 진행하면서 설정은 따로 바꾸지 않고 기본값으로 지정했다. 확장팩은 VirtualBox 설치가 완료된 후 실행하면 자동으로 반영된다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VirtualBox 실행하기&lt;/strong&gt;&lt;br&gt;
설치된 VirtualBox를 실행하면 Oracle VM VirtualBox 관리자 창이 나타난다. 상단의 메뉴 중에서 가상 시스템 가져오기를 선택하여 보유한 가상 환경 이미지(.ova)의 경로를 입력할 수 있다. 경로를 입력하고 가져오기 버튼을 클릭하면 환경이 생성된다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;putty-환경-구성하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#putty-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0&quot; aria-label=&quot;putty 환경 구성하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PuTTY 환경 구성하기&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;PuTTY 설치 파일 다운로드하기&lt;/strong&gt;&lt;br&gt;
&lt;a href=&quot;https://www.putty.org/&quot;&gt;PuTTY 공식 홈페이지&lt;/a&gt;에 가면 &lt;a href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html&quot;&gt;다운로드&lt;/a&gt; 페이지로 이동할 수 있는 링크가 있다. 해당 페이지로 이동해서 &lt;strong&gt;Package files&lt;/strong&gt; 하단에 있는 링크 중에 자신의 OS와 비트에 맞는 MSI 파일을 다운로드 받는다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PuTTY 설치 진행하기&lt;/strong&gt;&lt;br&gt;
설치 파일을 실행하여 기본값으로 설치를 진행한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PuTTY로 가상 환경 접속하기&lt;/strong&gt;&lt;br&gt;
PuTTY를 실행하면 접속을 위해 알맞은 Host Name(또는 IP 주소)와 Port를 지정한다. IP 주소는 가상 환경마다 다르므로 확인이 필요하다.&lt;br&gt;
VirtualBox의 &lt;strong&gt;설정&gt;네트워크&gt;고급&lt;/strong&gt;에서 포트포워딩 규칙 버튼을 클릭하면, 생성되는 창의 호스트 IP 컬럼에서 확인할 수 있다. Port는 사용 중이 아니라면 보통 22번으로 지정한다.&lt;br&gt;
Session에 이름을 입력하여 저장하면 접속할 때마다 IP 주소와 Port를 입력하지 않아도 되고, Open 버튼을 클릭하여 가상 환경에 접속할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;virtualbox-종료하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#virtualbox-%EC%A2%85%EB%A3%8C%ED%95%98%EA%B8%B0&quot; aria-label=&quot;virtualbox 종료하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VirtualBox 종료하기&lt;/h2&gt;
&lt;p&gt;VirtualBox를 창을 닫아 강제 종료하면 문제가 발생할 수 있다. 꼭 VirtualBox로 실행 중인 가상 환경 안에서 시스템을 정상적으로 종료해야 한다.&lt;/p&gt;
&lt;h2 id=&quot;virtualbox-오류-기록&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#virtualbox-%EC%98%A4%EB%A5%98-%EA%B8%B0%EB%A1%9D&quot; aria-label=&quot;virtualbox 오류 기록 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VirtualBox 오류 기록&lt;/h2&gt;
&lt;h3 id=&quot;문제상황&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%A0%9C%EC%83%81%ED%99%A9&quot; aria-label=&quot;문제상황 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문제상황&lt;/h3&gt;
&lt;p&gt;VirtualBox를 실행하였을 때 오류 메세지가 뜨면서 프로그램 실행 불가&lt;/p&gt;
&lt;h3 id=&quot;오류-메세지&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%98%A4%EB%A5%98-%EB%A9%94%EC%84%B8%EC%A7%80&quot; aria-label=&quot;오류 메세지 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;오류 메세지&lt;/h3&gt;
&lt;p&gt;명령행에서 시작할 머신을 지정해야 합니다.&lt;br&gt;
사용 방법: VirtualboxVM —startvm &amp;#x3C;name|UUID&gt;&lt;br&gt;
이름이 name이거나 uuid가 uuid인 virtualbox 가상 머신을 시작합니다.&lt;/p&gt;
&lt;h3 id=&quot;해결방법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95&quot; aria-label=&quot;해결방법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;해결방법&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;첫 번째 시도: 설치된 가상 머신 중에 같은 이름을 가진 가상 머신이 있는지 확인&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;가상 머신이 중복되어 시작할 머신을 지정해달라는 오류인 것으로 짐작하고 다음을 시도하였다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;관리자 권한으로 CMD 실행&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;가상 머신이 존재하는 경로로 이동&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; C:&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Users&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;사용자 이름&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;VirtualBox VMs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;같은 이름의 폴더가 존재한다면 1개만 남기고 삭제&lt;/li&gt;
&lt;li&gt;다시 실행&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;해당 경로에 들어갔지만, 가상 머신이 중복되어 발생하는 오류는 아닌 것으로 확인하였다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;두 번째 시도: 가상머신 UUID 확인&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;오류 메세지에 UUID가 있어 무엇인지 찾아보니 가상 머신이 고유하게 가진 id(Universally Unique Identifier)인 것을 알게 되었다. 따라서 UUID를 알아내고, 오류 메세지에 있는 명령어에 직접적으로 지정하여 실행해주면 오류가 해결될 것으로 짐작하고 다음을 시도하였다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;관리자 권한으로 CMD 실행&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VirtualBox 커맨드를 사용하기 위해 VirtualBox 설치 경로로 이동&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; C:&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Program Files&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;Oracle&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;VirtualBox&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;가상 머신 리스트 확인&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 명령어 실행&lt;/span&gt;
VBoxManage.exe list vms

&lt;span class=&quot;token comment&quot;&gt;# 성공 시 &quot;가상 머신 이름&quot; {UUID} 형식으로 리스트 출력&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&quot;example_vm&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;4ecvfdh574q-erw42-4&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UUID 복사 및 명령어 실행&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;VirtualboxVM --startvm 4ecvfdh574q-erw42-4&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;해당 방법으로 가상 머신 실행에 성공하였고, 이후로도 오류가 발생하지 않았다.&lt;/p&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VirtualBox 공식 홈페이지 (&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PuTTY 공식 홈페이지 (&lt;a href=&quot;https://www.putty.org/&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;가상 머신 중복 확인 (&lt;a href=&quot;https://ffoorreeuunn.tistory.com/43&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;UUID의 정의 (&lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;UUID 리스트 조회하기 (&lt;a href=&quot;https://lng1982.tistory.com/293&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Django 시작하기 (feat. PostgreSQL)]]></title><description><![CDATA[이때까지 사용해본 웹 프레임워크는 Spring과 Flask가 있었다. Spring은 Java를 사용하던 3학년 때 전자정부표준프레임워크(eGovFrame)을 사용했던 경험으로 알고 있었고, Flask는 지난 6개월 간 엘리스 AI…]]></description><link>https://makeitmin.github.io/TIL/django-시작하기-(feat.-postgresql)/</link><guid isPermaLink="false">https://makeitmin.github.io/TIL/django-시작하기-(feat.-postgresql)/</guid><pubDate>Tue, 03 Aug 2021 12:08:42 GMT</pubDate><content:encoded>&lt;p&gt;이때까지 사용해본 웹 프레임워크는 &lt;strong&gt;Spring&lt;/strong&gt;과 &lt;strong&gt;Flask&lt;/strong&gt;가 있었다. Spring은 Java를 사용하던 3학년 때 전자정부표준프레임워크(eGovFrame)을 사용했던 경험으로 알고 있었고, Flask는 지난 6개월 간 엘리스 AI 트랙에서 수행한 프로젝트에서 백엔드 프레임워크로 사용하며 경험하였다.&lt;/p&gt;
&lt;p&gt;Spring은 MVC 패턴을 따르는 프레임워크로, 데이터를 관리하는 부분(Model)과 HTTP 요청을 처리하는 부분(View)과 라우팅 부분(Controller)로 이루어져 있었다. 사실 그때는 MVC 패턴의 장점인 재사용성, 모듈화 등을 정확히 알고 썼다기보다는 폴더가 역할별로 잘 나뉘어 있기 때문에 화면 코드(JSP, HTML)와 데이터를 불러오는 코드(DAO: Data Access Object)가 어지럽게 뒤섞이지 않는 것이 좋았던 것 같다.&lt;/p&gt;
&lt;p&gt;Flask는 Python 환경에서 Flask 패키지를 설치해서 &lt;code class=&quot;language-text&quot;&gt;app.py&lt;/code&gt; 파일 하나에 API 함수를 짜서 하나하나 조립하듯이 구현했기 때문에 직관적이고 자유도가 높아서 좋았다.&lt;/p&gt;
&lt;p&gt;이렇게 지금까지 알고 있던 2개의 프레임워크를 뒤로 하고, Python으로 백엔드를 구현할 때 가장 많이 사용한다는 Django에 대해 알아보려고 한다.&lt;/p&gt;
&lt;h2 id=&quot;django-조사하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#django-%EC%A1%B0%EC%82%AC%ED%95%98%EA%B8%B0&quot; aria-label=&quot;django 조사하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Django 조사하기&lt;/h2&gt;
&lt;p&gt;Django에 대해 다룬 블로그나 문서는 아주 많았다. 처음부터 전부 알기엔 어려웠지만, 내 머리는 이때까지의 경험에 빗대어 Django를 이렇게 (아주 거칠게) 요약했다. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spring의 MVC 패턴을 가져가면서 Flask처럼 Python을 사용하는 프레임워크&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MVC 패턴에서의 Controller 역할을 Django에서는 프레임워크 자체가 수행하기 때문에 Controller보다는 화면을 보여주는 Template 부분을 강조하여 MVT, MTV 패턴으로 표기한 곳도 많았다.&lt;/p&gt;
&lt;p&gt;Python을 쓰는 Flask와의 비교도 많이 볼 수 있었다. &lt;/p&gt;
&lt;p&gt;Django는 구현해야 하는 내부 앱이 많거나, 안정성과 확장성을 중요하게 여기는 대형 프로젝트에서 사용한다. Django로 프로젝트를 생성하면 대부분의 개발환경 설정이 완료되어 있기 때문에 경제적이다. &lt;/p&gt;
&lt;p&gt;반면 Flask는 복잡한 구조가 필요하지 않고, 안정성을 개발자가 짠 코드만으로도 충분히 커버할 수 있는 간단한 프로젝트에서 많이 사용한다. 당연히 Django보다 가볍다.&lt;/p&gt;
&lt;h2 id=&quot;django-프로젝트&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#django-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8&quot; aria-label=&quot;django 프로젝트 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Django 프로젝트&lt;/h2&gt;
&lt;h3 id=&quot;django-설치&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#django-%EC%84%A4%EC%B9%98&quot; aria-label=&quot;django 설치 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Django 설치&lt;/h3&gt;
&lt;p&gt;여러 글을 읽었는데 일단 너무 많고, 나는 글로 읽는 것보다 직접 해보면서 더 잘 배우는 타입이어서 그냥 Django 프로젝트를 하나 만들어보기로 했다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;django 패키지를 설치한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; django&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;django_test라는 이름의 프로젝트를 생성한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;django-admin startproject django_test &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;프로젝트 Tree는 다음과 같다. 참고로 Linux 환경에서는 &lt;code class=&quot;language-text&quot;&gt;tree&lt;/code&gt; 명령어를 이용하면 손쉽게 폴더 구조를 그릴 수 있다.  &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;django_test
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;-- django_test
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;-- __init__.py
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;-- asgi.py
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;-- settings.py
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;-- urls.py
&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;-- wsgi.py
&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;-- manage.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;생성된-파일의-용도&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%83%9D%EC%84%B1%EB%90%9C-%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%9A%A9%EB%8F%84&quot; aria-label=&quot;생성된 파일의 용도 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;생성된 파일의 용도&lt;/h3&gt;
&lt;p&gt;자동으로 생성된 각각의 파일이 어떤 역할을 하는지 알아보았다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;manage.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Django 프로젝트의 다양한 커맨드를 관리하는 Util 파일&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;init&lt;/strong&gt;.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python이 이 디렉토리를 패키지처럼 다룰 수 있도록 명시하는 파일&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;settings.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Django 프로젝트의 환경 및 구성을 저장하는 파일&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;urls.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Django 프로젝트의 URL 선언을 저장하는 파일&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;asgi.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Django 프로젝트를 서비스하기 위한 ASGI 호환 웹 서버 인터페이스&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;wsgi.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Django 프로젝트를 서비스하기 위한 WSGI 호환 웹 서버 인터페이스&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;wsgi와-asgi의-차이점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#wsgi%EC%99%80-asgi%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90&quot; aria-label=&quot;wsgi와 asgi의 차이점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WSGI와 ASGI의 차이점&lt;/h3&gt;
&lt;p&gt;생성된 파일을 보면, 웹 서버 인터페이스를 담당하는 파일이 wsgi.py와 asgi.py로 2개인 것을 확인할 수 있다. 애플리케이션이 Nginx, Apache와 같은 웹 서버와 상호작용하기 위한 인터페이스라는 점에서는 같은 역할을 하지만, 각각 호환되는 형식에 따라 나뉜 것이다.&lt;/p&gt;
&lt;p&gt;그렇다면 이 2가지 형식의 차이는 무엇일까? 가장 큰 차이점은 &lt;strong&gt;비동기 처리의 가능 여부&lt;/strong&gt;에 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WSGI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;웹 서버와 애플리케이션 사이의 미들웨어로 웹 서버가 애플리케이션의 코드를 이해할 수 있도록 중간에서 코드를 읽어 반환하는 역할이다. WSGI는 2가지 형태가 존재한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;웹서버(Nginx, Apache)에서 제공하는 내장 모듈 형식&lt;/li&gt;
&lt;li&gt;Python으로 작성된 Web App Server 형식&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ASGI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;대용량 트래픽에서 동기 처리만을 지원하여 한계를 가지는 WSGI와는 달리, ASGI는 비동기 처리를 지원한다. 따라서 &lt;strong&gt;Websocket 프로토콜과 HTTP 2.0을 지원&lt;/strong&gt;한다고 한다. Websocket 등을 사용한 &lt;strong&gt;실시간 서비스&lt;/strong&gt; 등에는 ASGI가 적합하다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;postsql-데이터베이스에-유저-등록하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postsql-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%97%90-%EC%9C%A0%EC%A0%80-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0&quot; aria-label=&quot;postsql 데이터베이스에 유저 등록하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostSQL 데이터베이스에 유저 등록하기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL은 사전에 설치한 상태이다. 다음과 같이 입력하여 접속한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; -u postgres psql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;접속에 성공하면 유저를 생성한다. ‘admin’이라는 이름으로 생성했다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;CREATE &lt;span class=&quot;token environment constant&quot;&gt;USER&lt;/span&gt; admin&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;프로젝트에 쓸 데이터베이스를 생성한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;CREATE DATABASE django_db OWNER admin&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;참고로 유저 패스워드는 다음과 같이 변경할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ALTER &lt;span class=&quot;token environment constant&quot;&gt;USER&lt;/span&gt; admin WITH PASSWORD &lt;span class=&quot;token string&quot;&gt;&apos;admin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;postgresql-패키지-설치하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0&quot; aria-label=&quot;postgresql 패키지 설치하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL 패키지 설치하기&lt;/h3&gt;
&lt;p&gt;pip로 PostgreSQL 패키지를 설치한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip3 &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; psycopg2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;설치하는 중에 다음과 같은 오류가 발생하였다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
./psycopg/psycopg.h:36:10: fatal error: libpq-fe.h: No such &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; or directory
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
error: &lt;span class=&quot;token builtin class-name&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;x86_64-linux-gnu-gcc&apos;&lt;/span&gt; failed with &lt;span class=&quot;token builtin class-name&quot;&gt;exit&lt;/span&gt; status &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;libpq&lt;/code&gt; 패키지를 따로 설치하고 다시 시도하면 된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; libpq-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;프로젝트-설정settingspy-수정하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95settingspy-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0&quot; aria-label=&quot;프로젝트 설정settingspy 수정하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로젝트 설정(settings.py) 수정하기&lt;/h3&gt;
&lt;p&gt;Django 프로젝트의 설정이 구현되어 있는 &lt;code class=&quot;language-text&quot;&gt;settings.py&lt;/code&gt; 파일을 다음과 같이 수정한다. 데이터베이스로 설정한 PostgreSQL은 사전에 설치한 상태이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;시간대(TIME_ZONE)&lt;/li&gt;
&lt;li&gt;static 폴더의 경로(STATIC_ROOT)&lt;/li&gt;
&lt;li&gt;데이터베이스 설정(DATABASES)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
Django settings for django_test project.

Generated by &apos;django-admin startproject&apos; using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Path

&lt;span class=&quot;token comment&quot;&gt;# Build paths inside the project like this: BASE_DIR / &apos;subdir&apos;.&lt;/span&gt;
BASE_DIR &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Path&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parent

&lt;span class=&quot;token comment&quot;&gt;# Quick-start development settings - unsuitable for production&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# SECURITY WARNING: keep the secret key used in production secret!&lt;/span&gt;
SECRET_KEY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django-insecure-#x(fox4#*2+x(c%v!jmf(7om$xw)_9qx0y^&amp;amp;efx6i9_b)9fv+d&apos;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# SECURITY WARNING: don&apos;t run with debug turned on in production!&lt;/span&gt;
DEBUG &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;

ALLOWED_HOSTS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Application definition&lt;/span&gt;

INSTALLED_APPS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.admin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.contenttypes&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.sessions&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.messages&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.staticfiles&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

MIDDLEWARE &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.middleware.security.SecurityMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.sessions.middleware.SessionMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.middleware.common.CommonMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.middleware.csrf.CsrfViewMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.messages.middleware.MessageMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

ROOT_URLCONF &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django_test.urls&apos;&lt;/span&gt;

TEMPLATES &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;BACKEND&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.template.backends.django.DjangoTemplates&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;DIRS&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;APP_DIRS&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;OPTIONS&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;context_processors&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;django.template.context_processors.debug&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;django.template.context_processors.request&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth.context_processors.auth&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.messages.context_processors.messages&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

WSGI_APPLICATION &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django_test.wsgi.application&apos;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Database&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# https://docs.djangoproject.com/en/3.2/ref/settings/#databases&lt;/span&gt;

DATABASES &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;default&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;ENGINE&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.db.backends.postgresql&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;NAME&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django_db&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;USER&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;admin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;PASSWORD&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;admin&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;HOST&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;localhost&apos;&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;PORT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;5432&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Password validation&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators&lt;/span&gt;

AUTH_PASSWORD_VALIDATORS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;NAME&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;NAME&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth.password_validation.MinimumLengthValidator&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;NAME&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth.password_validation.CommonPasswordValidator&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;NAME&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.contrib.auth.password_validation.NumericPasswordValidator&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Internationalization&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# https://docs.djangoproject.com/en/3.2/topics/i18n/&lt;/span&gt;

LANGUAGE_CODE &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;en-us&apos;&lt;/span&gt;

TIME_ZONE &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Asia/Seoul&apos;&lt;/span&gt;

USE_I18N &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;

USE_L10N &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;

USE_TZ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Static files (CSS, JavaScript, Images)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# https://docs.djangoproject.com/en/3.2/howto/static-files/&lt;/span&gt;

STATIC_URL &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;/static/&apos;&lt;/span&gt;
STATIC_ROOT &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;BASE_DIR&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;static&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Default primary key field type&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field&lt;/span&gt;

DEFAULT_AUTO_FIELD &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;django.db.models.BigAutoField&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;django--postgresql-연동하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#django--postgresql-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0&quot; aria-label=&quot;django  postgresql 연동하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Django + PostgreSQL 연동하기&lt;/h2&gt;
&lt;p&gt;Django 프로젝트에 데이터베이스가 반영될 수 있도록 마이그레이션 작업을 해준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 마이그레이트&lt;/span&gt;
python3 manage.py migrate

&lt;span class=&quot;token comment&quot;&gt;# 슈퍼유저 생성&lt;/span&gt;
python manage.py createsuperuser&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Django 초보 가이드 - 실습을 통해 알아보는 장고 입문 (&lt;a href=&quot;https://www.inflearn.com/course/django-%EC%B4%88%EB%B3%B4-%EA%B0%80%EC%9D%B4%EB%93%9C-%EC%8B%A4%EC%8A%B5%EC%9D%84-%ED%86%B5%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-%EC%9E%A5%EA%B3%A0-%EC%9E%85%EB%AC%B8&quot;&gt;강의&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django 공식 문서 (문서)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Django 앱 작성하기 (&lt;a href=&quot;https://docs.djangoproject.com/ko/3.2/intro/tutorial01/&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ASGI를 사용하여 배포하는 방법 (&lt;a href=&quot;https://docs.djangoproject.com/ko/3.2/howto/deployment/asgi/&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django Girls 튜토리얼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;나의 첫 번째 Django 프로젝트 (&lt;a href=&quot;https://tutorial.djangogirls.org/ko/django_start_project/&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PostgreSQL 연동 준비 (&lt;a href=&quot;https://tutorial-extensions.djangogirls.org/ko/optional_postgresql_installation#undefined-6&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REST API 개발로 알아보는 WSGI, ASGI (&lt;a href=&quot;https://blog.neonkid.xyz/249&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;psycopg2 설치 오류 (&lt;a href=&quot;https://stackoverflow.com/questions/63584368/pip-install-psycopg2-error-command-x86-64-linux-gnu-gcc-failed-with-exit-st&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PostgreSQL 연동하기 (&lt;a href=&quot;https://hecpas0620.tistory.com/15&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[PostgreSQL 시작하기 (feat. Django)]]></title><description><![CDATA[기존에 사용한 경험이 있는 데이터베이스는 MySQL과 MongoDB가 있었다. 관계형 데이터베이스(RDB)로 범위를 줄이면 MySQL 정도였고, 엘리스 AI 트랙에서 했던 프로젝트 중에 백엔드를 Django와 PostgreSQL…]]></description><link>https://makeitmin.github.io/TIL/postgresql-시작하기-(feat.-django)/</link><guid isPermaLink="false">https://makeitmin.github.io/TIL/postgresql-시작하기-(feat.-django)/</guid><pubDate>Tue, 03 Aug 2021 12:08:36 GMT</pubDate><content:encoded>&lt;p&gt;기존에 사용한 경험이 있는 데이터베이스는 MySQL과 MongoDB가 있었다. 관계형 데이터베이스(RDB)로 범위를 줄이면 MySQL 정도였고, 엘리스 AI 트랙에서 했던 프로젝트 중에 백엔드를 Django와 PostgreSQL로 구성한 프로젝트가 있었다. 나는 그 프로젝트에서 프론트엔드를 맡았고 Django를 애초에 몰랐기에 백엔드 코드를 자세히 보지 않았는데, 당시 백엔드 개발을 맡은 팀원이 개발환경 구성을 굉장히 일찍 끝내서 인상깊었던 기억이 있다.&lt;/p&gt;
&lt;p&gt;그렇게 백엔드는 캄캄하게 모른 채로 지나간 프로젝트였는데 드디어 그 프로젝트의 백엔드 코드와 데이터베이스 구성을 이해할 수 있게 될 것 같아 벌써 기분이 좋다. &lt;/p&gt;
&lt;h2 id=&quot;postgresql-조사하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql-%EC%A1%B0%EC%82%AC%ED%95%98%EA%B8%B0&quot; aria-label=&quot;postgresql 조사하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL 조사하기&lt;/h2&gt;
&lt;h3 id=&quot;postgresql의-필요성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1&quot; aria-label=&quot;postgresql의 필요성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL의 필요성&lt;/h3&gt;
&lt;p&gt;Django 프로젝트를 위해 관계형 데이터베이스인 PostgreSQL에 대해 찾아보면서 들었던 가장 큰 의문은 &lt;strong&gt;관계형 데이터베이스를 사용한다면 왜 MySQL이나 Oracle이 아닌 PostgreSQL을 사용하는지&lt;/strong&gt;였다. 답은 &lt;strong&gt;다른 데이터베이스에 비해 Django 입장에서 PostgreSQL만이 지원하는 기능이 많기 때문&lt;/strong&gt;이었다. Django 공식 문서에서는 다음과 같이 설명하고 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PostgreSQL has a number of features which are not shared by the other databases Django supports. (생략) … Django provides support for a number of data types which will only work with PostgreSQL.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;postgresql의-장점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql%EC%9D%98-%EC%9E%A5%EC%A0%90&quot; aria-label=&quot;postgresql의 장점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL의 장점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;무료 오픈 소스&lt;/li&gt;
&lt;li&gt;관계형 데이터베이스지만 객체 지향 데이터베이스의 기능(테이블 상속 및 함수 오버로딩)도 가능&lt;/li&gt;
&lt;li&gt;ACID(트랜잭션의 원자성, 일관성, 격리성, 내구성)를 엄격하게 준수하면서 동시성을 보장&lt;/li&gt;
&lt;li&gt;다양한 데이터 타입 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;postgresql-사용하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&quot; aria-label=&quot;postgresql 사용하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL 사용하기&lt;/h2&gt;
&lt;h3 id=&quot;postgresql-설치&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql-%EC%84%A4%EC%B9%98&quot; aria-label=&quot;postgresql 설치 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL 설치&lt;/h3&gt;
&lt;p&gt;설치되는 환경은 Ubuntu 18.04 이다. &lt;a href=&quot;https://www.postgresql.org/download/linux/ubuntu/&quot;&gt;PostgreSQL 공식 문서&lt;/a&gt;를 통해 저장소를 확인하였다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;postgresql과 postgresql-contrib을 설치한다.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 저장소 설정&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&apos;echo &quot;deb http://apt.postgresql.org/pub/repos/apt &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;lsb_release -cs&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;-pgdg main&quot; &gt; /etc/apt/sources.list.d/pgdg.list&apos;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; apt-key &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; -

&lt;span class=&quot;token comment&quot;&gt;# apt 패키지 업데이트&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; update

&lt;span class=&quot;token comment&quot;&gt;# postgresql, postgresql-contrib 설치&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; postgresql postgresql-contrib&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PostgreSQL 서버를 연결한다.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; postgresql start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;서버가 잘 연결되었는지 확인한다.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 13/main (port 5432): online 이 뜨면 성공&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; postgresql status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;root 유저 설정&lt;/strong&gt;
여기서 조금 헤맸는데, 이유는 바로 PostgreSQL을 시작하기 위해 &lt;code class=&quot;language-text&quot;&gt;psql&lt;/code&gt;을 입력했지만 다음과 같은 오류가 발생했기 때문이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;psql: error: FATAL:  role &lt;span class=&quot;token string&quot;&gt;&quot;root&quot;&lt;/span&gt; does not exist&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 오류는 PostgreSQL에 ‘root’라는 Role이 등록되지 않아 생긴 문제이다. Unix 시스템의 root 계정과는 다른 개념이다. 대신 PostgreSQL에 슈퍼유저로 기본 등록되어 있는 postgres 계정으로 접속하자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; -u postgres psql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 하면 바로 Shell이 뜬다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;postgresql의-명령어&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postgresql%EC%9D%98-%EB%AA%85%EB%A0%B9%EC%96%B4&quot; aria-label=&quot;postgresql의 명령어 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PostgreSQL의 명령어&lt;/h3&gt;
&lt;p&gt;데이터베이스와 테이블을 생성 또는 삭제하고, 데이터를 삽입/조회/수정/삭제할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 데이터베이스 생성&lt;/span&gt;
CREATE DATABASE testdb&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 데이터베이스 삭제&lt;/span&gt;
DROP DATABASE testdb&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 데이터베이스 접속(Linux Command)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; -u postgres psql -d testdb

&lt;span class=&quot;token comment&quot;&gt;# 데이터베이스 목록&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;l

&lt;span class=&quot;token comment&quot;&gt;# 테이블 생성&lt;/span&gt;
CREATE TABLE &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
	USER_ID SERIAL PRIMARY KEY,
	USER_NAME VARCHAR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; UNIQUE NOT NULL,
	PASSWORD VARCHAR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; NOT NULL,
	EMAIL VARCHAR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;355&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; UNIQUE NOT NULL
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 테이블 삭제&lt;/span&gt;
DROP TABLE user&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 데이터 삽입&lt;/span&gt;
INSERT INTO &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt; VALUES &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;seongmin&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;1234&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;seongminha0910@gmail.com&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 데이터 조회&lt;/span&gt;
SELECT * FROM &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
SELECT EMAIL FROM &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 데이터 수정&lt;/span&gt;
UPDATE &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt; SET &lt;span class=&quot;token assign-left variable&quot;&gt;EMAIL&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;seongminha.dev@gmail.com&apos;&lt;/span&gt; where &lt;span class=&quot;token assign-left variable&quot;&gt;USER_ID&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# 데이터 삭제&lt;/span&gt;
DELETE FROM &lt;span class=&quot;token string&quot;&gt;&quot;USER&quot;&lt;/span&gt; where &lt;span class=&quot;token assign-left variable&quot;&gt;USER_ID&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SQLite vs MySQL vs PostgreSql: 관계형 DB 시스템의 비교 (&lt;a href=&quot;https://smoh.tistory.com/370?category=706280&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PostgreSQL 공식문서 (&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;문서&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 설치 (&lt;a href=&quot;https://www.postgresql.org/download/linux/ubuntu/&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;PostgreSQL 기본 쿼리 (&lt;a href=&quot;https://www.postgresql.org/docs/9.2/sql-insert.html&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Django 공식 문서 (&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/contrib/postgres/&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Django Girls 튜토리얼 (&lt;a href=&quot;https://tutorial-extensions.djangogirls.org/ko/optional_postgresql_installation#undefined-6&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[커널 오브젝트에 대한 이해]]></title><description><![CDATA[…]]></description><link>https://makeitmin.github.io/Computer Science/커널-오브젝트에-대한-이해/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/커널-오브젝트에-대한-이해/</guid><pubDate>Sat, 31 Jul 2021 16:08:30 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;커널&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 운영체제에 존재하는 핵심 모듈&lt;/li&gt;
&lt;li&gt;커널의 기능을 추가하고 보강한 것이 현대의 운영체제&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;커널 오브젝트&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;커널에 의해 관리되는 리소스 정보를 담고 있는 데이터 블록&lt;/li&gt;
&lt;li&gt;프로세스 생성 시 구조체의 형태로 함께 생성&lt;/li&gt;
&lt;li&gt;프로세스의 상태 정보, 우선 순위 정보 저장&lt;/li&gt;
&lt;li&gt;리소스마다 관리되어야 하는 정보가 다르기 때문에 각기 디자인&lt;/li&gt;
&lt;li&gt;프로그래머가 직접적으로 접근 불가&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;운영체제&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자의 요청을 받아 리소스를 생성하고 소멸시키고 관리를 담당&lt;/li&gt;
&lt;li&gt;접근 정보를 보유하여 접근을 허용&lt;/li&gt;
&lt;li&gt;조회 정보를 보유하여 어디까지 읽었는지 전달&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;리소스&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 리소스는 고유의 커널 오브젝트를 동반&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;커널-오브젝트에의-접근&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%9D%98-%EC%A0%91%EA%B7%BC&quot; aria-label=&quot;커널 오브젝트에의 접근 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;커널 오브젝트에의 접근&lt;/h2&gt;
&lt;h3 id=&quot;핸들handle&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%B8%EB%93%A4handle&quot; aria-label=&quot;핸들handle permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;핸들(Handle)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;프로세스의 커널 오브젝트에 부여된 고유한 정보&lt;/li&gt;
&lt;li&gt;커널 오브젝트가 가진 정보를 수정하기 위한 간접적인 접근에 필요&lt;/li&gt;
&lt;li&gt;정수(integer) 자료형 / 핸들(handle) 자료형&lt;/li&gt;
&lt;li&gt;각 리소스의 핸들을 얻는 방법은 상이&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;우선순위-기반-커널-오브젝트의-프로세스-관리&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-%EA%B8%B0%EB%B0%98-%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%9D%98-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EA%B4%80%EB%A6%AC&quot; aria-label=&quot;우선순위 기반 커널 오브젝트의 프로세스 관리 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;우선순위 기반 커널 오브젝트의 프로세스 관리&lt;/h3&gt;
&lt;p&gt;고속의 CPU에서 출력 결과를 확인하기 위해 실행 속도를 늦추는 방법&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sleep 함수&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;호출 시 현재 프로세스가 Running 상태에서 Blocked 상태로 전환&lt;/li&gt;
&lt;li&gt;다른 프로세스가 대신 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Busy Waiting 루프&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;호출 시 현재 프로세스가 Running 상태에서 Ready 상태로 전환&lt;/li&gt;
&lt;li&gt;호출이 완료되기 이전에도 우선순위에 따라 프로세스 실행 변화&lt;/li&gt;
&lt;li&gt;함수 단위의 실행이 아닌 명령어 단위의 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;커널-오브젝트와-핸들의-종속-관계&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%99%80-%ED%95%B8%EB%93%A4%EC%9D%98-%EC%A2%85%EC%86%8D-%EA%B4%80%EA%B3%84&quot; aria-label=&quot;커널 오브젝트와 핸들의 종속 관계 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;커널 오브젝트와 핸들의 종속 관계&lt;/h2&gt;
&lt;h3 id=&quot;핸들-테이블handle-table&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%B8%EB%93%A4-%ED%85%8C%EC%9D%B4%EB%B8%94handle-table&quot; aria-label=&quot;핸들 테이블handle table permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;핸들 테이블(Handle Table)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;프로세스마다 각자의 핸들 테이블 존재&lt;/li&gt;
&lt;li&gt;특정 프로세스 커널 오브젝트의 핸들 값 다수를 저장하여 각 프로세스 커널에 접근 가능&lt;/li&gt;
&lt;li&gt;핸들 테이블에 등록된 값을 기반으로 프로세스에서 커널 오브젝트에 접근&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;운영체제---커널-오브젝트-간-종속-관계&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C---%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-%EA%B0%84-%EC%A2%85%EC%86%8D-%EA%B4%80%EA%B3%84&quot; aria-label=&quot;운영체제   커널 오브젝트 간 종속 관계 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;운영체제 - 커널 오브젝트 간 종속 관계&lt;/h3&gt;
&lt;p&gt;운영 체제에 종속된 커널 오브젝트는 여러 프로세스에 의해 간접적으로 접근 가능&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;커널 오브젝트가 가진 Usage Count 정보를 통해 해당 커널 오브젝트를 참조하고 있는 프로세스의 개수 확인&lt;/li&gt;
&lt;li&gt;참조하는 프로세스가 소멸하면 Usage Count 값이 감소&lt;/li&gt;
&lt;li&gt;커널 오브젝트를 직접 참조하는 자식 프로세스가 소멸하더라도 부모 프로세스는 여전히 해당 커널 오브젝트를 참조 가능 (Usage Count ≠ 0)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;프로세스---핸들-간-종속-관계&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4---%ED%95%B8%EB%93%A4-%EA%B0%84-%EC%A2%85%EC%86%8D-%EA%B4%80%EA%B3%84&quot; aria-label=&quot;프로세스   핸들 간 종속 관계 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로세스 - 핸들 간 종속 관계&lt;/h3&gt;
&lt;p&gt;핸들은 운영체제(전체)가 아닌 각 프로세스에 종속되어 있기 때문에 프로세스가 서로 상이하면 같은 값 할당 가능&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프로세스 자기자신의 핸들은 핸들 테이블에 저장하지 않고, Windows 시스템 함수로 고유한 상수값을 호출 (GetCurrentProcess)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;커널-오브젝트와-usage-count&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%99%80-usage-count&quot; aria-label=&quot;커널 오브젝트와 usage count permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;커널 오브젝트와 Usage Count&lt;/h2&gt;
&lt;h3 id=&quot;usage-count의-사용&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#usage-count%EC%9D%98-%EC%82%AC%EC%9A%A9&quot; aria-label=&quot;usage count의 사용 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Count의 사용&lt;/h3&gt;
&lt;p&gt;커널 오브젝트를 참조하는 대상이 하나도 없을 때 소멸시키기&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자식 프로세스가 소멸하며 종료 코드를 커널 오브젝트의 정보로 저장하면 부모 프로세스가 이를 반환받아 해당 커널 오브젝트의 참조를 중단 가능하고, 이 경우 Usage Count 값이 감소&lt;/li&gt;
&lt;li&gt;커널 오브젝트는 모든 프로세스가 해당 커널 오브젝트를 참조하지 않겠다고 표명했을 때 (Usage Count=0), 운영체제에 의해 소멸&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;closehandle-함수의-사용&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#closehandle-%ED%95%A8%EC%88%98%EC%9D%98-%EC%82%AC%EC%9A%A9&quot; aria-label=&quot;closehandle 함수의 사용 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CloseHandle 함수의 사용&lt;/h3&gt;
&lt;p&gt;핸들을 반환하면서 커널 오브젝트의 Usage Count를 감소시키는 기능&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리소스의 낭비를 막기 위해 사용&lt;/li&gt;
&lt;li&gt;프로세스가 작업을 끝마치고 return을 통해 종료&lt;/li&gt;
&lt;li&gt;TerminateProcess 함수는 프로세스 강제 종료 요청으로, CloseHandle 함수와 달리 위험성이 존재&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;뇌를 자극하는 윈도우즈 시스템 프로그래밍 (&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;#x26;mallGb=KOR&amp;#x26;barcode=9788979144611&amp;#x26;orderClick=LEa&amp;#x26;Kc=&quot;&gt;도서&lt;/a&gt;, &lt;a href=&quot;https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot;&gt;강의&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[프로세스의 생성과 소멸]]></title><description><![CDATA[프로세스 프로세스란 프로세스별로 할당받는 리소스를 모두 포함하는 개념 가상 메모리 공간 + 프로세스 별로 독립적으로 사용하게 되는 레지스터 셋 RAM 보다 더 큰 메모리 공간을 할당받았을 경우, 까지 사용 레지스터 셋은 현재 실행 중인…]]></description><link>https://makeitmin.github.io/Computer Science/프로세스의-생성과-소멸/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/프로세스의-생성과-소멸/</guid><pubDate>Sun, 18 Jul 2021 16:37:25 GMT</pubDate><content:encoded>&lt;h2 id=&quot;프로세스&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4&quot; aria-label=&quot;프로세스 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로세스&lt;/h2&gt;
&lt;p&gt;프로세스란 프로세스별로 할당받는 리소스를 모두 포함하는 개념&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가상 메모리 공간 + 프로세스 별로 독립적으로 사용하게 되는 레지스터 셋&lt;/li&gt;
&lt;li&gt;RAM 보다 더 큰 메모리 공간을 할당받았을 경우, &lt;code class=&quot;language-text&quot;&gt;가상 메모리 공간&lt;/code&gt;까지 사용&lt;/li&gt;
&lt;li&gt;레지스터 셋은 현재 실행 중인 1개 프로세스의 정보를 보유&lt;/li&gt;
&lt;li&gt;멀티스레드, 멀티프로세스 환경에서 성능을 높이는 이슈&lt;/li&gt;
&lt;li&gt;레지스터 셋 1개당 프로세스 1개를 할당하는 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;스케줄러&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8A%A4%EC%BC%80%EC%A4%84%EB%9F%AC&quot; aria-label=&quot;스케줄러 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;스케줄러&lt;/h2&gt;
&lt;p&gt;둘 이상의 프로세스가 적절히 실행되도록 컨트롤하는 작업 수행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스케줄러도 하나의 프로세스로 인식 가능&lt;/li&gt;
&lt;li&gt;스케줄러를 가급적 적게 가동할 수 있다면 좋은 운영체제&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;프로세스의-상태&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%9D%98-%EC%83%81%ED%83%9C&quot; aria-label=&quot;프로세스의 상태 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로세스의 상태&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Ready&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;실행 전 프로세스들의 상태&lt;/li&gt;
&lt;li&gt;스케줄러가 Running 상태로 전환해 줄 때까지 대기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Running&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스케줄러가 선택한 프로세스가 실행 중인 상태&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Blocked&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU에 의존적이지 않은 연산(I/O)이 머무르다가 완료되면 Ready 상태로 전환&lt;/li&gt;
&lt;li&gt;CPU에 의존적이지 않은 연산(I/O)과 CPU에 의존적인 연산(사칙연산)의 병행을 위해 존재&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;컨텍스트-스위칭&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%8A%A4%EC%9C%84%EC%B9%AD&quot; aria-label=&quot;컨텍스트 스위칭 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컨텍스트 스위칭&lt;/h2&gt;
&lt;p&gt;둘 이상의 프로세스가 실행될 때 &lt;code class=&quot;language-text&quot;&gt;메모리&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;레지스터 셋&lt;/code&gt;에 들어가는 데이터를 전환하는 작업&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;대상이 많으면 많을수록 부담&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;프로세스의-생성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%9D%98-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;프로세스의 생성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로세스의 생성&lt;/h2&gt;
&lt;p&gt;프로세스 생성 함수(CreateProcess)를 실행하기 위한 흐름&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;LPSTARTUPINFO: 프로세스 특성 정보를 설정하는 구조체 (정보 전달)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;구조체 변수의 크기: 전달되는 구조체를 구분&lt;/li&gt;
&lt;li&gt;콘솔 윈도우의 타이틀 바 제목&lt;/li&gt;
&lt;li&gt;프로세스 윈도우의 x, y 좌표&lt;/li&gt;
&lt;li&gt;프로세스 윈도우의 가로, 세로 길이&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CreateProcess: 구조체에서 전달받은 정보를 참조하여 프로세스 생성&lt;/li&gt;
&lt;li&gt;LPPROCESS_INFORMATION: 생성된 프로세스 정보가 채워지는 구조체 (정보 반환)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;프로세스-생성-조건&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%9D%EC%84%B1-%EC%A1%B0%EA%B1%B4&quot; aria-label=&quot;프로세스 생성 조건 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로세스 생성 조건&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;자식 프로세스&lt;/li&gt;
&lt;li&gt;부모 프로세스&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;표준 검색경로&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;실행 중인 프로세스의 실행파일이 존재하는 디렉토리&lt;/li&gt;
&lt;li&gt;실행 중인 프로세스의 현재 디렉토리&lt;/li&gt;
&lt;li&gt;Windows의 시스템 디렉토리&lt;/li&gt;
&lt;li&gt;Windows 디렉토리&lt;/li&gt;
&lt;li&gt;환경변수 PATH에 의해 지정되어 있는 디렉토리&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;/li&gt;
&lt;li&gt;뇌를 자극하는 윈도우즈 시스템 프로그래밍 (&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;#x26;mallGb=KOR&amp;#x26;barcode=9788979144611&amp;#x26;orderClick=LEa&amp;#x26;Kc=&quot;&gt;도서&lt;/a&gt;, &lt;a href=&quot;https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot;&gt;강의&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[컴퓨터 구조에 대한 두 번째 이야기]]></title><description><![CDATA[컴퓨터 구조의 접근방법 (1) 컴퓨터 디자인 CPU…]]></description><link>https://makeitmin.github.io/Computer Science/컴퓨터-구조에-대한-두-번째-이야기/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/컴퓨터-구조에-대한-두-번째-이야기/</guid><pubDate>Sun, 11 Jul 2021 18:08:10 GMT</pubDate><content:encoded>&lt;h2 id=&quot;컴퓨터-구조의-접근방법-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0%EC%9D%98-%EC%A0%91%EA%B7%BC%EB%B0%A9%EB%B2%95-1&quot; aria-label=&quot;컴퓨터 구조의 접근방법 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 구조의 접근방법 (1)&lt;/h2&gt;
&lt;h3 id=&quot;컴퓨터-디자인&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%EB%94%94%EC%9E%90%EC%9D%B8&quot; aria-label=&quot;컴퓨터 디자인 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 디자인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CPU(하드웨어)를 디자인하는 것&lt;/li&gt;
&lt;li&gt;하드웨어 전문가, 알고리즘 전문가, 인터페이스 전문가, 프로그래머 필요&lt;/li&gt;
&lt;li&gt;명령어가 어떻게 구성되느냐에 따라 레지스터 구성되고, 레지스터 구성에 따라 하드웨어 디자인
→ 하드웨어 디자인과 레지스터-명령어 디자인은 병행 필요&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;레지스터&lt;/strong&gt;와 &lt;strong&gt;명령어&lt;/strong&gt;(컴파일러를 통해 만들어지는 명령어의 집합) 디자인&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;레지스터-디자인의-핵심&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EB%94%94%EC%9E%90%EC%9D%B8%EC%9D%98-%ED%95%B5%EC%8B%AC&quot; aria-label=&quot;레지스터 디자인의 핵심 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;레지스터 디자인의 핵심&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;레지스터의 비트 수
→ 보편적으로 n비트 시스템에서는 명령어가 n비트이기 때문에 레지스터도 n비트로 설정&lt;/li&gt;
&lt;li&gt;레지스터 개수
→ 다다익선&lt;/li&gt;
&lt;li&gt;레지스터 각각의 용도
→ RAM이나 H/D과 같은 범용 메모리와는 다르게 특별한 목적이 할당된 칸이 존재
→ 명령어가 단순화되고, 속도 향상&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;컴퓨터-구조의-접근방법-2&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0%EC%9D%98-%EC%A0%91%EA%B7%BC%EB%B0%A9%EB%B2%95-2&quot; aria-label=&quot;컴퓨터 구조의 접근방법 2 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 구조의 접근방법 (2)&lt;/h2&gt;
&lt;p&gt;명령어 디자인에 따라 ALU 도 결정 → ALU가 명령어를 읽어야 하기 때문&lt;/p&gt;
&lt;h3 id=&quot;명령어-구성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%84%B1&quot; aria-label=&quot;명령어 구성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;명령어 구성&lt;/h3&gt;
&lt;p&gt;각 부분에 비트를 조합하여 할당 → 명령어의 종류에 따라 명령어 구성(설계)이 상이&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;예약&lt;/li&gt;
&lt;li&gt;연산자&lt;/li&gt;
&lt;li&gt;저장소
→ 연산 결과는 레지스터에 저장&lt;/li&gt;
&lt;li&gt;피연산자
→ 레지스터 주소 or 숫자 구분하기 위해 첫 비트를 구분자로 약속
→ 표현할 수 있는 숫자가 많지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;명령어-구조-종류&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0-%EC%A2%85%EB%A5%98&quot; aria-label=&quot;명령어 구조 종류 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;명령어 구조 종류&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CISC 계열
→ 복잡한 명령어, 다양한 형태로 조합
→ 일정 수준 이상 속도를 향상시킬 수 없음&lt;/li&gt;
&lt;li&gt;RISC 계열
→ CISC의 명령어를 간소화
→ 제한사항 존재
→ 오늘날 대부분의 CPU에 적용
→ Fetch, Decode, Execution 을 각각 1클럭에 수행할 때, 여러 명령어 동시에 실행 가능
→ CISC 보다 적은 클럭 수를 가지고 같은 양의 명령 수행 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;load--store-명령어-디자인&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#load--store-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%94%94%EC%9E%90%EC%9D%B8&quot; aria-label=&quot;load  store 명령어 디자인 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LOAD &amp;#x26; STORE 명령어 디자인&lt;/h2&gt;
&lt;h3 id=&quot;load-명령어&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#load-%EB%AA%85%EB%A0%B9%EC%96%B4&quot; aria-label=&quot;load 명령어 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LOAD 명령어&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;레지스터로 피연산자의 메모리 주소를 불러들이는 명령&lt;/li&gt;
&lt;li&gt;명령어 구조
→ 예약
→ LOAD
→ destination
→ source&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;store-명령어&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#store-%EB%AA%85%EB%A0%B9%EC%96%B4&quot; aria-label=&quot;store 명령어 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;STORE 명령어&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;연산 결과를 레지스터에 저장&lt;/li&gt;
&lt;li&gt;명령어 구조
→ 예약
→ STORE
→ source
→ destination&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;load-와-store-의-필요성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#load-%EC%99%80-store-%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1&quot; aria-label=&quot;load 와 store 의 필요성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LOAD 와 STORE 의 필요성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;명령어 제한
→ 사칙연산의 피연산자는 숫자 or 레지스터 주소
→ 연산 결과는 레지스터에 저장
→ 모든 연산은 레지스터를 통해 진행&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;레지스터를-통한-연산&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%97%B0%EC%82%B0&quot; aria-label=&quot;레지스터를 통한 연산 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;레지스터를 통한 연산&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;LOAD r1, 0x10&lt;/strong&gt; (0x10 에 있는 피연산자 호출하여 r1에 할당)&lt;br&gt;
&lt;strong&gt;LOAD r2, 0x20&lt;/strong&gt; (0x20 에 있는 피연산자 호출하여 r2에 할당)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ADD r3, r1, r2&lt;/strong&gt; (r1 과 r2 를 ADD 연산 하여 r3 에 할당)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STORE r3, 0x30&lt;/strong&gt; (r3 의 값을 0x30 에 저장)&lt;/p&gt;
&lt;h2 id=&quot;메모리를-참조하는-방법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%A5%BC-%EC%B0%B8%EC%A1%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95&quot; aria-label=&quot;메모리를 참조하는 방법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;메모리를 참조하는 방법&lt;/h2&gt;
&lt;h3 id=&quot;direct-모드&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#direct-%EB%AA%A8%EB%93%9C&quot; aria-label=&quot;direct 모드 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Direct 모드&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;메모리 주소를 레지스터에 바로 할당
→ LOAD r1, 0x10 (0x10 값을 r1 에 할당)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;indirect-모드&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#indirect-%EB%AA%A8%EB%93%9C&quot; aria-label=&quot;indirect 모드 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indirect 모드&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;메모리 주소에 있는 번지수를 참조하여 해당 번지에 있는 값을 레지스터에 할당
→ LOAD r1, [0x10] (0x10 에 있는 번지수를 참조하여 그 값을 r1 에 할당)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;문제점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%A0%9C%EC%A0%90&quot; aria-label=&quot;문제점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문제점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;현재의 비트 수로는 주소나 값을 표현하기 어려움&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;해결법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%B4%EA%B2%B0%EB%B2%95&quot; aria-label=&quot;해결법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;해결법&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;LOAD r1, 0x0010&lt;/strong&gt; (0x0010 에 있는 피연산자 호출하여 r1에 할당)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MUL r0, 4, 4&lt;/strong&gt; (4와 4를 곱셈하여 16을 r0에 할당)&lt;br&gt;
&lt;strong&gt;MUL r2, 4, 4&lt;/strong&gt; (4와 4를 곱셈하여 16을 r2에 할당)&lt;br&gt;
&lt;strong&gt;MUL r3, r0, r2&lt;/strong&gt; (r0와 r2를 곱셈하여 256, 즉 0x100 을 r3에 할당)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STORE r3, 0x0030&lt;/strong&gt; (r3 의 값을 0x0030 에 저장)&lt;br&gt;
&lt;strong&gt;LOAD r2, [0x0030]&lt;/strong&gt; (0x0030 에 있는 번지수를 참조하여 그 값을 r2 에 할당)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ADD r3, r1, r2&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;뇌를 자극하는 윈도우즈 시스템 프로그래밍 (&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;#x26;mallGb=KOR&amp;#x26;barcode=9788979144611&amp;#x26;orderClick=LEa&amp;#x26;Kc=&quot;&gt;도서&lt;/a&gt;, &lt;a href=&quot;https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot;&gt;강의&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[아스키코드 vs 유니코드]]></title><description><![CDATA[문자셋의 종류 SBCS(Single Byte Character Set) 1바이트 문자 표현 ASCII CODE printf, scanf, fgets, fputs 함수 MBCS(Multi Byte Character Set) 1바이트 or…]]></description><link>https://makeitmin.github.io/Computer Science/아스키코드-vs-유니코드/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/아스키코드-vs-유니코드/</guid><pubDate>Mon, 28 Jun 2021 18:07:55 GMT</pubDate><content:encoded>&lt;h2 id=&quot;문자셋의-종류&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%9E%90%EC%85%8B%EC%9D%98-%EC%A2%85%EB%A5%98&quot; aria-label=&quot;문자셋의 종류 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문자셋의 종류&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SBCS(Single Byte Character Set)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1바이트 문자 표현&lt;/li&gt;
&lt;li&gt;ASCII CODE&lt;/li&gt;
&lt;li&gt;printf, scanf, fgets, fputs 함수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MBCS(Multi Byte Character Set)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1바이트 or 2바이트 문자 표현&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WBCS(Wide Byte Character Set)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2바이트 문자 표현&lt;/li&gt;
&lt;li&gt;UNICODE&lt;/li&gt;
&lt;li&gt;wprintf, wscanf, fgetws, fputws 함수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;mbcs-기반의-프로그래밍의-문제점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mbcs-%EA%B8%B0%EB%B0%98%EC%9D%98-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90&quot; aria-label=&quot;mbcs 기반의 프로그래밍의 문제점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MBCS 기반의 프로그래밍의 문제점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;strlen 이 문자열의 길이를 계산할 때 NULL 문자 불포함&lt;/li&gt;
&lt;li&gt;문자열의 실제 길이와 문자열에 할당된 크기가 다를 때&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;wbcs-기반의-프로그래밍&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#wbcs-%EA%B8%B0%EB%B0%98%EC%9D%98-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot; aria-label=&quot;wbcs 기반의 프로그래밍 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WBCS 기반의 프로그래밍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MBCS 기반 프로그래밍의 문제점 해결 → 모든 문자들을 동일한 2바이트의 크기로 처리&lt;/li&gt;
&lt;li&gt;자료형 char → 자료형 wchar_t&lt;/li&gt;
&lt;li&gt;할당되는 문자열 앞에 ‘L’ 표기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;뇌를 자극하는 윈도우즈 시스템 프로그래밍 (&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;#x26;mallGb=KOR&amp;#x26;barcode=9788979144611&amp;#x26;orderClick=LEa&amp;#x26;Kc=&quot;&gt;도서&lt;/a&gt;, &lt;a href=&quot;https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot;&gt;강의&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[컴퓨터 구조에 대한 첫 번째 이야기]]></title><description><![CDATA[컴퓨터 구조와 운영체제 컴퓨터 구조 CPU (중앙처리장치) Cache 운영체제 메인 메모리 (램) 하드디스크 컴퓨터 하드웨어의 구성 및 CPU 이해 CPU ALU…]]></description><link>https://makeitmin.github.io/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/</guid><pubDate>Thu, 24 Jun 2021 23:07:30 GMT</pubDate><content:encoded>&lt;h2 id=&quot;컴퓨터-구조와-운영체제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C&quot; aria-label=&quot;컴퓨터 구조와 운영체제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 구조와 운영체제&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;컴퓨터 구조&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU (중앙처리장치)&lt;/li&gt;
&lt;li&gt;Cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;운영체제&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;메인 메모리 (램)&lt;/li&gt;
&lt;li&gt;하드디스크&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;컴퓨터-하드웨어의-구성-및-cpu-이해&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B5%AC%EC%84%B1-%EB%B0%8F-cpu-%EC%9D%B4%ED%95%B4&quot; aria-label=&quot;컴퓨터 하드웨어의 구성 및 cpu 이해 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 하드웨어의 구성 및 CPU 이해&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;ALU: 연산(산술/논리)을 담당&lt;/li&gt;
&lt;li&gt;컨트롤 유닛: 실행파일(컴파일된 명령어)를 해석하여 다른 블록에 전송&lt;/li&gt;
&lt;li&gt;레지스터: 각 블록이 필요로 하는 요소(명령어/피연산자)를 저장해두고 요청이 올 때 제공&lt;/li&gt;
&lt;li&gt;버스 인터페이스: 입출력 버스의 통신규약을 이해하고 명령어와 데이터를 CPU 내부로 받는 중간자 역할&lt;/li&gt;
&lt;li&gt;메인 메모리: 컴파일이 완료된 프로그램 코드가 올라가서 실행되는 영역&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;입출력 버스: 데이터를 전송하는 통로&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;어드레스 버스: 데이터의 주소값을 전달하는 버스&lt;/li&gt;
&lt;li&gt;데이터 버스: 데이터를 전달하는 버스&lt;/li&gt;
&lt;li&gt;컨트롤 버스: 어떤 것(데이터 또는 주소값)을 전달할 것인지 신호를 보내는 버스&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;클럭 신호: 가장 느린 연산의 속도에 맞춰 데이터를 이동시키는 신호&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;프로그램의-실행-과정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EA%B3%BC%EC%A0%95&quot; aria-label=&quot;프로그램의 실행 과정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로그램의 실행 과정&lt;/h2&gt;
&lt;p&gt;폰 노이만 아키텍처(Stored Program Concept) : 프로그램이 컴퓨터 내부에 저장되어 순차적으로 실행되는 구조&lt;/p&gt;
&lt;h3 id=&quot;실행파일의-생성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%ED%96%89%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;실행파일의 생성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실행파일의 생성&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;전처리기에 의한 치환 작업
: 지시자에 따라 소스코드 변경&lt;/li&gt;
&lt;li&gt;컴파일러에 의한 번역
: 소스코드를 어셈블리 코드로 번역&lt;/li&gt;
&lt;li&gt;어셈블러에 의한 바이너리 코드 생성
: 어셈블리 코드를 컴퓨터가 이해할 수 있는 바이너리 코드로 변경&lt;/li&gt;
&lt;li&gt;링커에 의한 연결과 결합
: 프로그램 내 참조 함수나 라이브러리를 연결하여 실행파일 생성&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;실행파일의-작동&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%ED%96%89%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%9E%91%EB%8F%99&quot; aria-label=&quot;실행파일의 작동 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실행파일의 작동&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fetch
: 메인 메모리에 로드된 실행파일의 명령어를 CPU로 전송&lt;/li&gt;
&lt;li&gt;Decode
: 명령어를 CPU가 연산하기 위해 해석&lt;/li&gt;
&lt;li&gt;Execution
: 해석된 명령어를 CPU가 실행&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;요약&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CPU에서 &lt;code class=&quot;language-text&quot;&gt;컨트롤 버스&lt;/code&gt;를 통해 어떤 작업을 원하는지 &lt;code class=&quot;language-text&quot;&gt;메인 메모리&lt;/code&gt;로 신호를 보낸다.&lt;/li&gt;
&lt;li&gt;메인 메모리에서 &lt;code class=&quot;language-text&quot;&gt;데이터 버스&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;어드레스 버스&lt;/code&gt;를 통해 데이터와 명령어를 전송한다.&lt;/li&gt;
&lt;li&gt;데이터와 명령어는 통신규약을 알고 있는 &lt;code class=&quot;language-text&quot;&gt;버스 인터페이스&lt;/code&gt;에 도착해서 CPU 내부로 전송된다. (Fetch)&lt;/li&gt;
&lt;li&gt;CPU 내부에서 데이터와 명령어는 &lt;code class=&quot;language-text&quot;&gt;레지스터&lt;/code&gt;에 대기 상태로 저장된다.&lt;/li&gt;
&lt;li&gt;순차적인 &lt;code class=&quot;language-text&quot;&gt;클럭 신호&lt;/code&gt;에 따라 레지스터에 저장된 명령어는 &lt;code class=&quot;language-text&quot;&gt;컨트롤 유닛&lt;/code&gt;으로 전송되어 해석(Decode)되고, 레지스터에 저장된 데이터는 &lt;code class=&quot;language-text&quot;&gt;ALU&lt;/code&gt;로 전송된다.&lt;/li&gt;
&lt;li&gt;ALU에서 명령어와 데이터로 연산이 수행된다. (Execution)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;뇌를 자극하는 윈도우즈 시스템 프로그래밍 (&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;#x26;mallGb=KOR&amp;#x26;barcode=9788979144611&amp;#x26;orderClick=LEa&amp;#x26;Kc=&quot;&gt;도서&lt;/a&gt;, &lt;a href=&quot;https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot;&gt;강의&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GitLab에서 GitHub로 Repository 이전하기]]></title><description><![CDATA[Code 이전하기 (간단) Issues, Milestones, Merge Request 이전하기 (복잡)   시작하기 전에 Merge Request를 이전하는 것은 open 되어 있는 것들만 가능합니다. GitHub API 정책상 Merge…]]></description><link>https://makeitmin.github.io/Git/gitlab에서-github로-repository-이전하기/</link><guid isPermaLink="false">https://makeitmin.github.io/Git/gitlab에서-github로-repository-이전하기/</guid><pubDate>Sat, 27 Mar 2021 07:07:12 GMT</pubDate><content:encoded>&lt;ol&gt;
&lt;li&gt;Code 이전하기 (간단)&lt;/li&gt;
&lt;li&gt;Issues, Milestones, Merge Request 이전하기 (복잡)  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;시작하기-전에&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90&quot; aria-label=&quot;시작하기 전에 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;시작하기 전에&lt;/h2&gt;
&lt;p&gt;Merge Request를 이전하는 것은 &lt;strong&gt;open&lt;/strong&gt; 되어 있는 것들만 가능합니다. GitHub API 정책상 Merge Request를 Pull Request로 옮기는 것은 &lt;strong&gt;Target 브랜치와 Source 브랜치 간의 커밋 차이&lt;/strong&gt;가 있어야 가능하다고 합니다. 이미 merged 상태인 것은 두 브랜치 간의 차이를 추적할 수 없으므로 Merge Request의 형태로 옮기기 어렵습니다.  &lt;/p&gt;
&lt;p&gt;해당 부분에 대해 &lt;a href=&quot;https://github.com/piceaTech/node-gitlab-2-github/issues/91#issuecomment-884719601&quot;&gt;직접 질문을 남긴 내용&lt;/a&gt;입니다.  &lt;/p&gt;
&lt;p&gt;질문 당시 merged 상태인 Merge Request를 이전할 경우 오류가 나고 있는 상황이었고, 이에 따라 이미 merged 상태인 Merge Request는 Issue의 형태로 이전되도록 어떤 친절한 개발자분의 코드 개선으로 &lt;a href=&quot;https://github.com/piceaTech/node-gitlab-2-github/pull/93&quot;&gt;오류가 핸들링된 내용&lt;/a&gt;입니다.&lt;/p&gt;
&lt;h2 id=&quot;방법-1--code-이전하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B0%A9%EB%B2%95-1--code-%EC%9D%B4%EC%A0%84%ED%95%98%EA%B8%B0&quot; aria-label=&quot;방법 1  code 이전하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;방법 1 : Code 이전하기&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;GitHub에 옮길 빈 Repository를 미리 생성합니다.&lt;/li&gt;
&lt;li&gt;로컬에서 다음을 수행합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# GitLab에서 bare 상태로 자신의 Repository clone 해오기&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone --mirror https://kdt-gitlab.elice.io/001_part2_project-portfolio/team2/skidmarker.git

&lt;span class=&quot;token comment&quot;&gt;# 프로젝트 폴더로 이동하기&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; skidmarker.git

&lt;span class=&quot;token comment&quot;&gt;# 새 GitHub Repository에 remote 연결&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote set-url --push origin https://github.com/makeitmin/skidmarker.git

&lt;span class=&quot;token comment&quot;&gt;# 새 GitHub Repository로 push 하기&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push --no-verify --mirror https://github.com/makeitmin/skidmarker.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;방법-2---issues-milestones-merge-requests-이전하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B0%A9%EB%B2%95-2---issues-milestones-merge-requests-%EC%9D%B4%EC%A0%84%ED%95%98%EA%B8%B0&quot; aria-label=&quot;방법 2   issues milestones merge requests 이전하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;방법 2 :  Issues, Milestones, Merge Requests 이전하기&lt;/h2&gt;
&lt;h3 id=&quot;폴더-생성하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0&quot; aria-label=&quot;폴더 생성하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;폴더 생성하기&lt;/h3&gt;
&lt;p&gt;CMD를 열고 다음을 수행합니다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; C:/Users/사용자/.ssh
&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; github
&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; gitlab&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;gitlab과-github에서-각각-ssh-key-발급받기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#gitlab%EA%B3%BC-github%EC%97%90%EC%84%9C-%EA%B0%81%EA%B0%81-ssh-key-%EB%B0%9C%EA%B8%89%EB%B0%9B%EA%B8%B0&quot; aria-label=&quot;gitlab과 github에서 각각 ssh key 발급받기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitLab과 GitHub에서 각각 SSH Key 발급받기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;GitLab 공개키&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.1.1&lt;/strong&gt; SSH Key 발급받기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Git Bash에서 작업&lt;/span&gt;
ssh-keygen
Generating public/private rsa key pair.
**Enter &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;which&lt;/span&gt; to save the key &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;/c/Users/사용자/.ssh/id_rsa&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: /c/Users/사용자/.ssh/github/id_rsa &lt;span class=&quot;token comment&quot;&gt;# Key 파일 저장할 경로 입력하기**&lt;/span&gt;
Created directory &lt;span class=&quot;token string&quot;&gt;&apos;/기본저장경로 또는 입력경로&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
**Enter passphrase &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; no passphrase&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;:      &lt;span class=&quot;token comment&quot;&gt;# 암호 입력하기**&lt;/span&gt;
**Enter same passphrase again:                     &lt;span class=&quot;token comment&quot;&gt;# 암호 재입력하기**&lt;/span&gt;
Your identification has been saved &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /입력한 경로.
Your public key has been saved &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /입력한 경로.
The key fingerprint is: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1.1.2&lt;/strong&gt; Key 파일이 저장된 경로의 id_rsa.pub 내용 복사&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ssh-rsa 뒤부터 사용자 이메일까지 복사&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; C://Users/사용자/.ssh/github/id_rsa.pub ssh-rsa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1.1.3&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;GitLab 프로필&lt;/code&gt; → &lt;code class=&quot;language-text&quot;&gt;Settings&lt;/code&gt; → &lt;code class=&quot;language-text&quot;&gt;SSH Keys&lt;/code&gt;에 접근&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.1.4&lt;/strong&gt; 복사한 id_rsa.pub 내용 붙여넣고 등록&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.1.5&lt;/strong&gt; 발급된 token 복사하기(다시 조회할 수 없으니 꼭 다른 곳에 복사해두기)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHub 공개키&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1&lt;/strong&gt; SSH Key 발급받기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Git Bash&lt;/span&gt;
ssh-keygen
Generating public/private rsa key pair.
**Enter &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;which&lt;/span&gt; to save the key &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;/c/Users/사용자/.ssh/id_rsa&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: /c/Users/사용자/.ssh/gitlab/id_rsa &lt;span class=&quot;token comment&quot;&gt;# Key 파일 저장할 경로 입력하기**&lt;/span&gt;
Created directory &lt;span class=&quot;token string&quot;&gt;&apos;/기본저장경로 또는 입력경로&apos;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
**Enter passphrase &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; no passphrase&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;:      &lt;span class=&quot;token comment&quot;&gt;# 암호 입력하기**&lt;/span&gt;
**Enter same passphrase again:                     &lt;span class=&quot;token comment&quot;&gt;# 암호 재입력하기**&lt;/span&gt;
Your identification has been saved &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /입력한 경로.
Your public key has been saved &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /입력한 경로.
The key fingerprint is: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2.2&lt;/strong&gt; Key 파일이 저장된 경로의 id_rsa.pub 내용 복사&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ssh-rsa 뒤부터 사용자 이메일까지 복사&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; C://Users/사용자/.ssh/gitlab/id_rsa.pub ssh-rsa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2.3&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;GitHub 프로필&lt;/code&gt; → &lt;code class=&quot;language-text&quot;&gt;Settings&lt;/code&gt; → &lt;code class=&quot;language-text&quot;&gt;SSH and GPG Key&lt;/code&gt; → &lt;code class=&quot;language-text&quot;&gt;New SSH Key&lt;/code&gt;에 접근&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.4&lt;/strong&gt; 복사한 id_rsa.pub 내용 붙여넣고 등록&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.5&lt;/strong&gt; 발급된 token 복사하기(다시 조회할 수 없으니 꼭 다른 곳에 복사해두기)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;node-gitlab-2-github-사용하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#node-gitlab-2-github-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&quot; aria-label=&quot;node gitlab 2 github 사용하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;node-gitlab-2-github 사용하기&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;node-gitlab-2-github 가져오기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone https://github.com/piceaTech/node-gitlab-2-github.git
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; node-gitlab-2-github&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;node_modules 설치하기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; i&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;settings.ts 생성하기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; sample_settings.ts settings.ts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;settings.ts 작성하고 저장하기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.

gitlab: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    url: &lt;span class=&quot;token string&quot;&gt;&apos;https://kdt-gitlab.elice.io&apos;&lt;/span&gt;,
    token: &lt;span class=&quot;token string&quot;&gt;&apos;복사해둔 GitLab token&apos;&lt;/span&gt;,
    projectId: &lt;span class=&quot;token string&quot;&gt;&apos;GitLab Repository의 Project ID&apos;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# ex) 551 (Repository 타이틀 아래에 있음)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,
  github: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    baseUrl: &lt;span class=&quot;token string&quot;&gt;&apos;https://api.github.com&apos;&lt;/span&gt;,
    owner: &lt;span class=&quot;token string&quot;&gt;&apos;GitHub 유저명&apos;&lt;/span&gt;,
    token: &lt;span class=&quot;token string&quot;&gt;&apos;복사해둔 GitHub token&apos;&lt;/span&gt;,
    repo: &lt;span class=&quot;token string&quot;&gt;&apos;GitHub Repository 이름&apos;&lt;/span&gt;,
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,

&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.

transfer: &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    milestones: true,
    labels: true,
    issues: true,
    mergeRequests: true,
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;,

&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;실행하기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;참고자료&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C&quot; aria-label=&quot;참고자료 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;node-gitlab-2-github (&lt;a href=&quot;https://github.com/piceaTech/node-gitlab-2-github&quot;&gt;레포지토리&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SSH 공개키 생성 (&lt;a href=&quot;https://git-scm.com/book/ko/v2/Git-%EC%84%9C%EB%B2%84-SSH-%EA%B3%B5%EA%B0%9C%ED%82%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0&quot;&gt;문서&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;SSH 공개키 등록 (&lt;a href=&quot;https://brunch.co.kr/@anonymdevoo/10&quot;&gt;블로그&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[about]]></title><description><![CDATA[소개 업데이트 예정입니다]]></description><link>https://makeitmin.github.io/resume-en/</link><guid isPermaLink="false">https://makeitmin.github.io/resume-en/</guid><pubDate>Sun, 27 Jan 2019 16:21:13 GMT</pubDate><content:encoded>&lt;h1 id=&quot;소개&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%86%8C%EA%B0%9C&quot; aria-label=&quot;소개 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;소개&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;p&gt;&lt;em&gt;업데이트 예정입니다&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</content:encoded></item></channel></rss>