{"componentChunkName":"component---src-templates-blog-post-js","path":"/Computer Science/커널-오브젝트에-대한-이해/","result":{"data":{"site":{"siteMetadata":{"title":"makeitmin.io","author":"Seongmin Ha","siteUrl":"https://makeitmin.github.io","comment":{"disqusShortName":"","utterances":"makeitmin/makeitmin.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3c0f43a0-cca0-5bda-88c3-7d3b90563eaa","excerpt":"…","html":"<p><strong>커널</strong></p>\n<ul>\n<li>모든 운영체제에 존재하는 핵심 모듈</li>\n<li>커널의 기능을 추가하고 보강한 것이 현대의 운영체제</li>\n</ul>\n<p><strong>커널 오브젝트</strong></p>\n<ul>\n<li>커널에 의해 관리되는 리소스 정보를 담고 있는 데이터 블록</li>\n<li>프로세스 생성 시 구조체의 형태로 함께 생성</li>\n<li>프로세스의 상태 정보, 우선 순위 정보 저장</li>\n<li>리소스마다 관리되어야 하는 정보가 다르기 때문에 각기 디자인</li>\n<li>프로그래머가 직접적으로 접근 불가</li>\n</ul>\n<p><strong>운영체제</strong></p>\n<ul>\n<li>사용자의 요청을 받아 리소스를 생성하고 소멸시키고 관리를 담당</li>\n<li>접근 정보를 보유하여 접근을 허용</li>\n<li>조회 정보를 보유하여 어디까지 읽었는지 전달</li>\n</ul>\n<p><strong>리소스</strong></p>\n<ul>\n<li>모든 리소스는 고유의 커널 오브젝트를 동반</li>\n</ul>\n<h2 id=\"커널-오브젝트에의-접근\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%9D%98-%EC%A0%91%EA%B7%BC\" aria-label=\"커널 오브젝트에의 접근 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커널 오브젝트에의 접근</h2>\n<h3 id=\"핸들handle\" style=\"position:relative;\"><a href=\"#%ED%95%B8%EB%93%A4handle\" aria-label=\"핸들handle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핸들(Handle)</h3>\n<ul>\n<li>프로세스의 커널 오브젝트에 부여된 고유한 정보</li>\n<li>커널 오브젝트가 가진 정보를 수정하기 위한 간접적인 접근에 필요</li>\n<li>정수(integer) 자료형 / 핸들(handle) 자료형</li>\n<li>각 리소스의 핸들을 얻는 방법은 상이</li>\n</ul>\n<h3 id=\"우선순위-기반-커널-오브젝트의-프로세스-관리\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-%EA%B8%B0%EB%B0%98-%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%9D%98-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EA%B4%80%EB%A6%AC\" aria-label=\"우선순위 기반 커널 오브젝트의 프로세스 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우선순위 기반 커널 오브젝트의 프로세스 관리</h3>\n<p>고속의 CPU에서 출력 결과를 확인하기 위해 실행 속도를 늦추는 방법</p>\n<ol>\n<li>\n<p><strong>sleep 함수</strong></p>\n<ul>\n<li>호출 시 현재 프로세스가 Running 상태에서 Blocked 상태로 전환</li>\n<li>다른 프로세스가 대신 실행</li>\n</ul>\n</li>\n<li>\n<p><strong>Busy Waiting 루프</strong></p>\n<ul>\n<li>호출 시 현재 프로세스가 Running 상태에서 Ready 상태로 전환</li>\n<li>호출이 완료되기 이전에도 우선순위에 따라 프로세스 실행 변화</li>\n<li>함수 단위의 실행이 아닌 명령어 단위의 실행</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"커널-오브젝트와-핸들의-종속-관계\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%99%80-%ED%95%B8%EB%93%A4%EC%9D%98-%EC%A2%85%EC%86%8D-%EA%B4%80%EA%B3%84\" aria-label=\"커널 오브젝트와 핸들의 종속 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커널 오브젝트와 핸들의 종속 관계</h2>\n<h3 id=\"핸들-테이블handle-table\" style=\"position:relative;\"><a href=\"#%ED%95%B8%EB%93%A4-%ED%85%8C%EC%9D%B4%EB%B8%94handle-table\" aria-label=\"핸들 테이블handle table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핸들 테이블(Handle Table)</h3>\n<ul>\n<li>프로세스마다 각자의 핸들 테이블 존재</li>\n<li>특정 프로세스 커널 오브젝트의 핸들 값 다수를 저장하여 각 프로세스 커널에 접근 가능</li>\n<li>핸들 테이블에 등록된 값을 기반으로 프로세스에서 커널 오브젝트에 접근</li>\n</ul>\n<h3 id=\"운영체제---커널-오브젝트-간-종속-관계\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C---%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-%EA%B0%84-%EC%A2%85%EC%86%8D-%EA%B4%80%EA%B3%84\" aria-label=\"운영체제   커널 오브젝트 간 종속 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제 - 커널 오브젝트 간 종속 관계</h3>\n<p>운영 체제에 종속된 커널 오브젝트는 여러 프로세스에 의해 간접적으로 접근 가능</p>\n<ul>\n<li>커널 오브젝트가 가진 Usage Count 정보를 통해 해당 커널 오브젝트를 참조하고 있는 프로세스의 개수 확인</li>\n<li>참조하는 프로세스가 소멸하면 Usage Count 값이 감소</li>\n<li>커널 오브젝트를 직접 참조하는 자식 프로세스가 소멸하더라도 부모 프로세스는 여전히 해당 커널 오브젝트를 참조 가능 (Usage Count ≠ 0)</li>\n</ul>\n<h3 id=\"프로세스---핸들-간-종속-관계\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4---%ED%95%B8%EB%93%A4-%EA%B0%84-%EC%A2%85%EC%86%8D-%EA%B4%80%EA%B3%84\" aria-label=\"프로세스   핸들 간 종속 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스 - 핸들 간 종속 관계</h3>\n<p>핸들은 운영체제(전체)가 아닌 각 프로세스에 종속되어 있기 때문에 프로세스가 서로 상이하면 같은 값 할당 가능</p>\n<ul>\n<li>프로세스 자기자신의 핸들은 핸들 테이블에 저장하지 않고, Windows 시스템 함수로 고유한 상수값을 호출 (GetCurrentProcess)</li>\n</ul>\n<h2 id=\"커널-오브젝트와-usage-count\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%84%90-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%99%80-usage-count\" aria-label=\"커널 오브젝트와 usage count permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커널 오브젝트와 Usage Count</h2>\n<h3 id=\"usage-count의-사용\" style=\"position:relative;\"><a href=\"#usage-count%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"usage count의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage Count의 사용</h3>\n<p>커널 오브젝트를 참조하는 대상이 하나도 없을 때 소멸시키기</p>\n<ul>\n<li>자식 프로세스가 소멸하며 종료 코드를 커널 오브젝트의 정보로 저장하면 부모 프로세스가 이를 반환받아 해당 커널 오브젝트의 참조를 중단 가능하고, 이 경우 Usage Count 값이 감소</li>\n<li>커널 오브젝트는 모든 프로세스가 해당 커널 오브젝트를 참조하지 않겠다고 표명했을 때 (Usage Count=0), 운영체제에 의해 소멸</li>\n</ul>\n<h3 id=\"closehandle-함수의-사용\" style=\"position:relative;\"><a href=\"#closehandle-%ED%95%A8%EC%88%98%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"closehandle 함수의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CloseHandle 함수의 사용</h3>\n<p>핸들을 반환하면서 커널 오브젝트의 Usage Count를 감소시키는 기능</p>\n<ul>\n<li>리소스의 낭비를 막기 위해 사용</li>\n<li>프로세스가 작업을 끝마치고 return을 통해 종료</li>\n<li>TerminateProcess 함수는 프로세스 강제 종료 요청으로, CloseHandle 함수와 달리 위험성이 존재</li>\n</ul>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li>뇌를 자극하는 윈도우즈 시스템 프로그래밍 (<a href=\"http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&#x26;mallGb=KOR&#x26;barcode=9788979144611&#x26;orderClick=LEa&#x26;Kc=\">도서</a>, <a href=\"https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">강의</a>)</li>\n</ul>","frontmatter":{"title":"커널 오브젝트에 대한 이해","date":"2021-07-31"}}},"pageContext":{"slug":"/Computer Science/커널-오브젝트에-대한-이해/","previous":{"fields":{"slug":"/Computer Science/프로세스의-생성과-소멸/"},"frontmatter":{"title":"프로세스의 생성과 소멸"}},"next":null}}}