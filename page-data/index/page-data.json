{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"makeitmin.io","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"회사에서 사용하기로 한 개발환경은 VirtualBox에 가상 환경을 올리고, PuTTY를 통해 접속하는 형태이다. 가상 환경은 이미 만들어두신 OVA 형식의 이미지가 있어서, 복사를 받아서 올리기만 하면 됐다. 각 환경 구성 방법과 오류가 발생하여 해결한 기록을 남겨두려고 한다. VirtualBox 환경 구성하기 VirtualBox 설치 파일과 확장팩 다…","fields":{"slug":"/TIL/virtualbox-+-putty-환경-구성하기/"},"frontmatter":{"date":"August 06, 2021","title":"VirtualBox + PuTTY 환경 구성하기","category":"TIL","draft":false}}},{"node":{"excerpt":"이때까지 사용해본 웹 프레임워크는 Spring과 Flask가 있었다. Spring은 Java를 사용하던 3학년 때 전자정부표준프레임워크(eGovFrame)을 사용했던 경험으로 알고 있었고, Flask는 지난 6개월 간 엘리스 AI 트랙에서 수행한 프로젝트에서 백엔드 프레임워크로 사용하며 경험하였다. Spring은 MVC 패턴을 따르는 프레임워크로, 데이터…","fields":{"slug":"/TIL/django-시작하기-(feat.-postgresql)/"},"frontmatter":{"date":"August 03, 2021","title":"Django 시작하기 (feat. PostgreSQL)","category":"TIL","draft":false}}},{"node":{"excerpt":"기존에 사용한 경험이 있는 데이터베이스는 MySQL과 MongoDB가 있었다. 관계형 데이터베이스(RDB)로 범위를 줄이면 MySQL 정도였고, 엘리스 AI 트랙에서 했던 프로젝트 중에 백엔드를 Django와 PostgreSQL로 구성한 프로젝트가 있었다. 나는 그 프로젝트에서 프론트엔드를 맡았고 Django를 애초에 몰랐기에 백엔드 코드를 자세히 보지 …","fields":{"slug":"/TIL/postgresql-시작하기-(feat.-django)/"},"frontmatter":{"date":"August 03, 2021","title":"PostgreSQL 시작하기 (feat. Django)","category":"TIL","draft":false}}},{"node":{"excerpt":"커널 모든 운영체제에 존재하는 핵심 모듈 커널의 기능을 추가하고 보강한 것이 현대의 운영체제 커널 오브젝트 커널에 의해 관리되는 리소스 정보를 담고 있는 데이터 블록 프로세스 생성 시 구조체의 형태로 함께 생성 프로세스의 상태 정보, 우선 순위 정보 저장 리소스마다 관리되어야 하는 정보가 다르기 때문에 각기 디자인 프로그래머가 직접적으로 접근 불가 운영체…","fields":{"slug":"/Computer Science/커널-오브젝트에-대한-이해/"},"frontmatter":{"date":"July 31, 2021","title":"커널 오브젝트에 대한 이해","category":"Computer Science","draft":false}}},{"node":{"excerpt":"프로세스 프로세스란 프로세스별로 할당받는 리소스를 모두 포함하는 개념 가상 메모리 공간 + 프로세스 별로 독립적으로 사용하게 되는 레지스터 셋 RAM 보다 더 큰 메모리 공간을 할당받았을 경우, 까지 사용 레지스터 셋은 현재 실행 중인 1개 프로세스의 정보를 보유 멀티스레드, 멀티프로세스 환경에서 성능을 높이는 이슈 레지스터 셋 1개당 프로세스 1개를 할…","fields":{"slug":"/Computer Science/프로세스의-생성과-소멸/"},"frontmatter":{"date":"July 18, 2021","title":"프로세스의 생성과 소멸","category":"Computer Science","draft":false}}},{"node":{"excerpt":"컴퓨터 구조의 접근방법 (1) 컴퓨터 디자인 CPU(하드웨어)를 디자인하는 것 하드웨어 전문가, 알고리즘 전문가, 인터페이스 전문가, 프로그래머 필요 명령어가 어떻게 구성되느냐에 따라 레지스터 구성되고, 레지스터 구성에 따라 하드웨어 디자인 \n→ 하드웨어 디자인과 레지스터-명령어 디자인은 병행 필요 레지스터와 명령어(컴파일러를 통해 만들어지는 명령어의 집…","fields":{"slug":"/Computer Science/컴퓨터-구조에-대한-두-번째-이야기/"},"frontmatter":{"date":"July 11, 2021","title":"컴퓨터 구조에 대한 두 번째 이야기","category":"Computer Science","draft":false}}},{"node":{"excerpt":"문자셋의 종류 SBCS(Single Byte Character Set) 1바이트 문자 표현 ASCII CODE printf, scanf, fgets, fputs 함수 MBCS(Multi Byte Character Set) 1바이트 or 2바이트 문자 표현 WBCS(Wide Byte Character Set) 2바이트 문자 표현 UNICODE wprintf…","fields":{"slug":"/Computer Science/아스키코드-vs-유니코드/"},"frontmatter":{"date":"June 28, 2021","title":"아스키코드 vs 유니코드","category":"Computer Science","draft":false}}},{"node":{"excerpt":"컴퓨터 구조와 운영체제 컴퓨터 구조 CPU (중앙처리장치) Cache 운영체제 메인 메모리 (램) 하드디스크 컴퓨터 하드웨어의 구성 및 CPU 이해 CPU ALU: 연산(산술/논리)을 담당 컨트롤 유닛: 실행파일(컴파일된 명령어)를 해석하여 다른 블록에 전송 레지스터: 각 블록이 필요로 하는 요소(명령어/피연산자)를 저장해두고 요청이 올 때 제공 버스 인…","fields":{"slug":"/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/"},"frontmatter":{"date":"June 24, 2021","title":"컴퓨터 구조에 대한 첫 번째 이야기","category":"Computer Science","draft":false}}},{"node":{"excerpt":"Code 이전하기 (간단) Issues, Milestones, Merge Request 이전하기 (복잡)   시작하기 전에 Merge Request를 이전하는 것은 open 되어 있는 것들만 가능합니다. GitHub API 정책상 Merge Request를 Pull Request로 옮기는 것은 Target 브랜치와 Source 브랜치 간의 커밋 차이가 있…","fields":{"slug":"/Git/gitlab에서-github로-repository-이전하기/"},"frontmatter":{"date":"March 27, 2021","title":"GitLab에서 GitHub로 Repository 이전하기","category":"Git","draft":false}}}]}},"pageContext":{}}}