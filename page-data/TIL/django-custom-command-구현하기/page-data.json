{"componentChunkName":"component---src-templates-blog-post-js","path":"/TIL/django-custom-command-구현하기/","result":{"data":{"site":{"siteMetadata":{"title":"makeitmin.io","author":"Seongmin Ha","siteUrl":"https://makeitmin.github.io","comment":{"disqusShortName":"","utterances":"makeitmin/makeitmin.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"045212a4-76ad-5ecf-beae-fee63ec53880","excerpt":"Django Custom Command는 특정 앱 내부의 특정 함수를 커맨드로 사용할 수 있는 기능이다. 더 쉽게 말하면, 개발자가 Django 앱 내부에 원하는 동작을 함수로 구현하고, 이를 커맨드로 manage.py에 등록하여 사용하는 개념이다.    다음 순서로 Django Custom Command를 구현할 것이다.   Django 앱 생성하기   Custom Command 작성하기 Django 앱 생성하기 이라는 Django 앱을 다음과 같이 생성한다. Custom Command…","html":"<p>Django Custom Command는 특정 앱 내부의 특정 함수를 커맨드로 사용할 수 있는 기능이다. 더 쉽게 말하면, 개발자가 Django 앱 내부에 원하는 동작을 함수로 구현하고, 이를 커맨드로 manage.py에 등록하여 사용하는 개념이다.   </p>\n<p>다음 순서로 Django Custom Command를 구현할 것이다.  </p>\n<ul>\n<li>Django 앱 생성하기  </li>\n<li>Custom Command 작성하기</li>\n</ul>\n<h2 id=\"django-앱-생성하기\" style=\"position:relative;\"><a href=\"#django-%EC%95%B1-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"django 앱 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django 앱 생성하기</h2>\n<p><code class=\"language-text\">example_app</code>이라는 Django 앱을 다음과 같이 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python manage.py startapp example_app</code></pre></div>\n<h2 id=\"custom-command-작성하기\" style=\"position:relative;\"><a href=\"#custom-command-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"custom command 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Command 작성하기</h2>\n<ol>\n<li>\n<p>커맨드가 작성될 폴더를 생성한다. 폴더 이름은 바꿀 수 없으며, 고정이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> management/commands</code></pre></div>\n<p>tree 명령어로 구조를 확인해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tree -L <span class=\"token number\">3</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">django_test\n\t<span class=\"token operator\">|</span>-- django_test\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- __init__.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- asgi.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- settings.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- urls.py\n\t<span class=\"token operator\">|</span>   <span class=\"token variable\"><span class=\"token variable\">`</span>-- wsgi.py\n\t<span class=\"token operator\">|</span>-- example_app\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- __init__.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- admin.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- apps.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- migrations\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- models.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- tests.py\n\t<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- views.py\n\t<span class=\"token operator\">|</span>   <span class=\"token variable\">`</span></span>-- management/commands\n\t`-- manage.py</code></pre></div>\n</li>\n<li>\n<p>해당 폴더 밑에 Python 파일을 작성한다. handle 함수는 커맨드가 실행될 때 메인 함수 역할이다. 여러 함수를 구현하고, 커맨드가 동작할 때 실행되도록 handle 함수에 선언해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># custom_command.py</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>management<span class=\"token punctuation\">.</span>base <span class=\"token keyword\">import</span> BaseCommand\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span>BaseCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        example_command_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        example_command_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   \n    <span class=\"token keyword\">def</span> <span class=\"token function\">example_command_1</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token comment\"># 데이터베이스에서 필요 없는 데이터를 삭제하는 코드</span>\n\t    <span class=\"token comment\"># ORM Query etc.</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">example_command_2</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       <span class=\"token comment\"># 데이터베이스 일괄 업데이트하는 코드</span>\n       <span class=\"token comment\"># ORM Query etc.</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n<li>\n<p>커맨드를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python manage.py custom_command</code></pre></div>\n</li>\n</ol>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li>Django Custom Management Commands (<a href=\"https://docs.djangoproject.com/ko/3.2/howto/custom-management-commands/\">문서</a>)</li>\n</ul>","frontmatter":{"title":"Django Custom Command 구현하기","date":"2021-08-26"}}},"pageContext":{"slug":"/TIL/django-custom-command-구현하기/","previous":{"fields":{"slug":"/TIL/media-query에서-font-size-줄이기/"},"frontmatter":{"title":"Media Query에서 font-size 줄이기"}},"next":{"fields":{"slug":"/TIL/django-orm으로-레코드-단위-데이터-불러오기/"},"frontmatter":{"title":"Django ORM으로 레코드 단위의 데이터 불러오기"}}}}}