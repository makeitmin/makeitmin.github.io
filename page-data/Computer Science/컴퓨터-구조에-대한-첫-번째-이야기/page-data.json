{"componentChunkName":"component---src-templates-blog-post-js","path":"/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/","result":{"data":{"site":{"siteMetadata":{"title":"makeitmin.io","author":"Seongmin Ha","siteUrl":"https://makeitmin.github.io","comment":{"disqusShortName":"","utterances":"makeitmin/makeitmin.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"ff0d6a46-ea44-5c05-8b9c-1f12d3d35762","excerpt":"컴퓨터 구조와 운영체제 컴퓨터 구조 CPU (중앙처리장치) Cache 운영체제 메인 메모리 (램) 하드디스크 컴퓨터 하드웨어의 구성 및 CPU 이해 CPU ALU: 연산(산술/논리)을 담당 컨트롤 유닛: 실행파일(컴파일된 명령어)를 해석하여 다른 블록에 전송 레지스터: 각 블록이 필요로 하는 요소(명령어/피연산자)를 저장해두고 요청이 올 때 제공 버스 인터페이스: 입출력 버스의 통신규약을 이해하고 명령어와 데이터를 CPU…","html":"<h2 id=\"컴퓨터-구조와-운영체제\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C\" aria-label=\"컴퓨터 구조와 운영체제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터 구조와 운영체제</h2>\n<ol>\n<li>\n<p>컴퓨터 구조</p>\n<ul>\n<li>CPU (중앙처리장치)</li>\n<li>Cache</li>\n</ul>\n</li>\n<li>\n<p>운영체제</p>\n<ul>\n<li>메인 메모리 (램)</li>\n<li>하드디스크</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"컴퓨터-하드웨어의-구성-및-cpu-이해\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B5%AC%EC%84%B1-%EB%B0%8F-cpu-%EC%9D%B4%ED%95%B4\" aria-label=\"컴퓨터 하드웨어의 구성 및 cpu 이해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터 하드웨어의 구성 및 CPU 이해</h2>\n<ol>\n<li>CPU</li>\n<li>ALU: 연산(산술/논리)을 담당</li>\n<li>컨트롤 유닛: 실행파일(컴파일된 명령어)를 해석하여 다른 블록에 전송</li>\n<li>레지스터: 각 블록이 필요로 하는 요소(명령어/피연산자)를 저장해두고 요청이 올 때 제공</li>\n<li>버스 인터페이스: 입출력 버스의 통신규약을 이해하고 명령어와 데이터를 CPU 내부로 받는 중간자 역할</li>\n<li>메인 메모리: 컴파일이 완료된 프로그램 코드가 올라가서 실행되는 영역</li>\n<li>\n<p>입출력 버스: 데이터를 전송하는 통로</p>\n<ul>\n<li>어드레스 버스: 데이터의 주소값을 전달하는 버스</li>\n<li>데이터 버스: 데이터를 전달하는 버스</li>\n<li>컨트롤 버스: 어떤 것(데이터 또는 주소값)을 전달할 것인지 신호를 보내는 버스</li>\n</ul>\n</li>\n<li>클럭 신호: 가장 느린 연산의 속도에 맞춰 데이터를 이동시키는 신호</li>\n</ol>\n<h2 id=\"프로그램의-실행-과정\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EA%B3%BC%EC%A0%95\" aria-label=\"프로그램의 실행 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그램의 실행 과정</h2>\n<p>폰 노이만 아키텍처(Stored Program Concept) : 프로그램이 컴퓨터 내부에 저장되어 순차적으로 실행되는 구조</p>\n<h3 id=\"실행파일의-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%83%9D%EC%84%B1\" aria-label=\"실행파일의 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행파일의 생성</h3>\n<ol>\n<li>전처리기에 의한 치환 작업\n: 지시자에 따라 소스코드 변경</li>\n<li>컴파일러에 의한 번역\n: 소스코드를 어셈블리 코드로 번역</li>\n<li>어셈블러에 의한 바이너리 코드 생성\n: 어셈블리 코드를 컴퓨터가 이해할 수 있는 바이너리 코드로 변경</li>\n<li>링커에 의한 연결과 결합\n: 프로그램 내 참조 함수나 라이브러리를 연결하여 실행파일 생성</li>\n</ol>\n<h3 id=\"실행파일의-작동\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%9E%91%EB%8F%99\" aria-label=\"실행파일의 작동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행파일의 작동</h3>\n<ol>\n<li>Fetch\n: 메인 메모리에 로드된 실행파일의 명령어를 CPU로 전송</li>\n<li>Decode\n: 명령어를 CPU가 연산하기 위해 해석</li>\n<li>Execution\n: 해석된 명령어를 CPU가 실행</li>\n</ol>\n<p><strong>요약</strong></p>\n<ol>\n<li>CPU에서 <code class=\"language-text\">컨트롤 버스</code>를 통해 어떤 작업을 원하는지 <code class=\"language-text\">메인 메모리</code>로 신호를 보낸다.</li>\n<li>메인 메모리에서 <code class=\"language-text\">데이터 버스</code>와 <code class=\"language-text\">어드레스 버스</code>를 통해 데이터와 명령어를 전송한다.</li>\n<li>데이터와 명령어는 통신규약을 알고 있는 <code class=\"language-text\">버스 인터페이스</code>에 도착해서 CPU 내부로 전송된다. (Fetch)</li>\n<li>CPU 내부에서 데이터와 명령어는 <code class=\"language-text\">레지스터</code>에 대기 상태로 저장된다.</li>\n<li>순차적인 <code class=\"language-text\">클럭 신호</code>에 따라 레지스터에 저장된 명령어는 <code class=\"language-text\">컨트롤 유닛</code>으로 전송되어 해석(Decode)되고, 레지스터에 저장된 데이터는 <code class=\"language-text\">ALU</code>로 전송된다.</li>\n<li>ALU에서 명령어와 데이터로 연산이 수행된다. (Execution)</li>\n</ol>","frontmatter":{"title":"컴퓨터 구조에 대한 첫 번째 이야기","date":"July 17, 2021"}}},"pageContext":{"slug":"/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/","previous":null,"next":null}}}