{"componentChunkName":"component---src-templates-blog-post-js","path":"/Computer Science/컴퓨터-구조에-대한-네-번째-이야기/","result":{"data":{"site":{"siteMetadata":{"title":"makeitmin.io","author":"Seongmin Ha","siteUrl":"https://makeitmin.github.io","comment":{"disqusShortName":"","utterances":"makeitmin/makeitmin.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"5c9bb6c2-7924-52ea-ae3e-bd4550b13277","excerpt":"메모리 계층 구조 하드 디스크의 2가지 기능 하드 디스크의 실행 : Memory Management 하드 디스크의 저장: File System ⇒ 하드 디스크가 메인 메모리를 보완할 때는 하드 디스크의 Memory Management 적 기능이 발현 CPU와 메모리 사이의 느린 속도를 향상하는 방법 캐쉬 메모리를 두어 성능 향상 레지스터 L1 캐쉬 L2 캐쉬 메인 메모리 하드 디스크 ALU가 필요한 데이터를 메모리 계층 구조에 Top-Bottom…","html":"<h2 id=\"메모리-계층-구조\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0\" aria-label=\"메모리 계층 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 계층 구조</h2>\n<h3 id=\"하드-디스크의-2가지-기능\" style=\"position:relative;\"><a href=\"#%ED%95%98%EB%93%9C-%EB%94%94%EC%8A%A4%ED%81%AC%EC%9D%98-2%EA%B0%80%EC%A7%80-%EA%B8%B0%EB%8A%A5\" aria-label=\"하드 디스크의 2가지 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하드 디스크의 2가지 기능</h3>\n<ul>\n<li>하드 디스크의 실행 : Memory Management</li>\n<li>하드 디스크의 저장: File System</li>\n</ul>\n<p>⇒ 하드 디스크가 메인 메모리를 보완할 때는 하드 디스크의 Memory Management 적 기능이 발현</p>\n<h3 id=\"cpu와-메모리-사이의-느린-속도를-향상하는-방법\" style=\"position:relative;\"><a href=\"#cpu%EC%99%80-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%8A%90%EB%A6%B0-%EC%86%8D%EB%8F%84%EB%A5%BC-%ED%96%A5%EC%83%81%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"cpu와 메모리 사이의 느린 속도를 향상하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU와 메모리 사이의 느린 속도를 향상하는 방법</h3>\n<p>캐쉬 메모리를 두어 성능 향상</p>\n<ol>\n<li>레지스터</li>\n<li>L1 캐쉬</li>\n<li>L2 캐쉬</li>\n<li>메인 메모리</li>\n<li>하드 디스크</li>\n</ol>\n<p>ALU가 필요한 데이터를 메모리 계층 구조에 Top-Bottom 순서로 요청하여 가장 하위의 하드 디스크까지 요청이 전달되면, 다시 가장 상위의 레지스터로 데이터를 전송하고 레지스터에 있는 데이터를 ALU가 사용</p>\n<h2 id=\"캐쉬와-캐쉬-알고리즘\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%89%AC%EC%99%80-%EC%BA%90%EC%89%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"캐쉬와 캐쉬 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐쉬와 캐쉬 알고리즘</h2>\n<h3 id=\"캐쉬-메모리의-특징\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%89%AC-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"캐쉬 메모리의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐쉬 메모리의 특징</h3>\n<ul>\n<li>\n<p>Temporal Locality</p>\n<ul>\n<li>기선언된 변수에 높은 확률로 다시 접근</li>\n</ul>\n</li>\n<li>\n<p>Spatial Locality</p>\n<ul>\n<li>Temporal Locality를 가진 변수의 주변에 있는 변수에 높은 확률로 접근</li>\n<li>주변의 변수를 활용할 확률이 높다는 가정</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"캐쉬-기본-정책\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%89%AC-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EC%B1%85\" aria-label=\"캐쉬 기본 정책 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐쉬 기본 정책</h3>\n<ul>\n<li>속도가 느리기 때문에 다른 단위보다 상대적으로 큰 메인 메모리와 하드 디스크 사이의 데이터 전송 단위</li>\n<li>블록 단위 데이터 전송으로 Spatial Locality가 가능함 → 캐쉬 메모리에 90% 이상의 데이터 저장 가능</li>\n</ul>\n<h2 id=\"가상-메모리\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"가상 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 메모리</h2>\n<h3 id=\"가상-메모리의-필요성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"가상 메모리의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 메모리의 필요성</h3>\n<p>CPU에서 필요로 하는 메모리가 메인 메모리의 공간보다 많을 경우 사용</p>\n<h3 id=\"가상-메모리의-사용\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"가상 메모리의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 메모리의 사용</h3>\n<ul>\n<li>하드디스크 영역까지 메인 메모리를 확장해서 사용 (실질적인 물리 메모리는 메인 메모리)</li>\n<li>MMU(Memory Management Unit)이 중간에서 CPU가 요청한 가상 메모리 주소를 물리 메모리 주소로 바꾸어 데이터를 취한 다음 전달</li>\n<li>하드 디스크에 블럭 단위의 메모리 공간 미리 확보</li>\n<li>오랫동안 사용되지 않은 메모리를 하드 디스크에 할당</li>\n<li>CPU에서 추가 메모리를 요구할 때 오랫동안 사용되지 않은 메모리를 하드 디스크에 할당하고, 하드 디스크에 저장되어 있는 필요한 블럭 단위 메모리를 회수</li>\n</ul>\n<h3 id=\"스왑-파일\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%99%91-%ED%8C%8C%EC%9D%BC\" aria-label=\"스왑 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스왑 파일</h3>\n<p>프로세스에서 필요한 메모리 공간을 확장하기 위해 하드 디스크에 존재하는 파일</p>\n<ul>\n<li>프로세스별로 가상 메모리 할당이 가능한 이유는 프로세스별 스왑 파일이 존재하기 때문</li>\n<li>프로세스별 스왑 파일마다 메인 메모리의 포지션도 달라짐 (컨텍스트 스위칭)</li>\n</ul>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li>뇌를 자극하는 윈도우즈 시스템 프로그래밍 (<a href=\"http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&#x26;mallGb=KOR&#x26;barcode=9788979144611&#x26;orderClick=LEa&#x26;Kc=\">도서</a>, <a href=\"https://www.inflearn.com/course/%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">강의</a>)</li>\n</ul>","frontmatter":{"title":"컴퓨터 구조에 대한 네 번째 이야기","date":"2021-11-07"}}},"pageContext":{"slug":"/Computer Science/컴퓨터-구조에-대한-네-번째-이야기/","previous":{"fields":{"slug":"/Computer Science/프로세스간-통신(ipc)/"},"frontmatter":{"title":"프로세스간 통신(IPC)"}},"next":null}}}