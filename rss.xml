<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[makeitmin.io]]></title><description><![CDATA[Blog posted about ...]]></description><link>https://makeitmin.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 17 Jul 2021 18:17:25 GMT</lastBuildDate><item><title><![CDATA[아스키코드 vs 유니코드]]></title><description><![CDATA[문자셋의 종류 SBCS(Single Byte Character Set) 1바이트 문자 표현 ASCII CODE printf, scanf, fgets, fputs 함수 MBCS(Multi Byte Character Set) 1바이트 or…]]></description><link>https://makeitmin.github.io/Computer Science/아스키코드-vs-유니코드/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/아스키코드-vs-유니코드/</guid><pubDate>Sat, 17 Jul 2021 18:07:55 GMT</pubDate><content:encoded>&lt;h2 id=&quot;문자셋의-종류&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%9E%90%EC%85%8B%EC%9D%98-%EC%A2%85%EB%A5%98&quot; aria-label=&quot;문자셋의 종류 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문자셋의 종류&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SBCS(Single Byte Character Set)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1바이트 문자 표현&lt;/li&gt;
&lt;li&gt;ASCII CODE&lt;/li&gt;
&lt;li&gt;printf, scanf, fgets, fputs 함수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MBCS(Multi Byte Character Set)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1바이트 or 2바이트 문자 표현&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WBCS(Wide Byte Character Set)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2바이트 문자 표현&lt;/li&gt;
&lt;li&gt;UNICODE&lt;/li&gt;
&lt;li&gt;wprintf, wscanf, fgetws, fputws 함수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;mbcs-기반의-프로그래밍의-문제점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mbcs-%EA%B8%B0%EB%B0%98%EC%9D%98-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90&quot; aria-label=&quot;mbcs 기반의 프로그래밍의 문제점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MBCS 기반의 프로그래밍의 문제점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;strlen 이 문자열의 길이를 계산할 때 NULL 문자 불포함&lt;/li&gt;
&lt;li&gt;문자열의 실제 길이와 문자열에 할당된 크기가 다를 때&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;wbcs-기반의-프로그래밍&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#wbcs-%EA%B8%B0%EB%B0%98%EC%9D%98-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot; aria-label=&quot;wbcs 기반의 프로그래밍 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WBCS 기반의 프로그래밍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MBCS 기반 프로그래밍의 문제점 해결 → 모든 문자들을 동일한 2바이트의 크기로 처리&lt;/li&gt;
&lt;li&gt;자료형 char → 자료형 wchar_t&lt;/li&gt;
&lt;li&gt;할당되는 문자열 앞에 ‘L’ 표기&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[컴퓨터 구조에 대한 첫 번째 이야기]]></title><description><![CDATA[컴퓨터 구조와 운영체제 컴퓨터 구조 CPU (중앙처리장치) Cache 운영체제 메인 메모리 (램) 하드디스크 컴퓨터 하드웨어의 구성 및 CPU 이해 CPU ALU…]]></description><link>https://makeitmin.github.io/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/</link><guid isPermaLink="false">https://makeitmin.github.io/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/</guid><pubDate>Sat, 17 Jul 2021 17:07:30 GMT</pubDate><content:encoded>&lt;h2 id=&quot;컴퓨터-구조와-운영체제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C&quot; aria-label=&quot;컴퓨터 구조와 운영체제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 구조와 운영체제&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;컴퓨터 구조&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU (중앙처리장치)&lt;/li&gt;
&lt;li&gt;Cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;운영체제&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;메인 메모리 (램)&lt;/li&gt;
&lt;li&gt;하드디스크&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;컴퓨터-하드웨어의-구성-및-cpu-이해&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B5%AC%EC%84%B1-%EB%B0%8F-cpu-%EC%9D%B4%ED%95%B4&quot; aria-label=&quot;컴퓨터 하드웨어의 구성 및 cpu 이해 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;컴퓨터 하드웨어의 구성 및 CPU 이해&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;ALU: 연산(산술/논리)을 담당&lt;/li&gt;
&lt;li&gt;컨트롤 유닛: 실행파일(컴파일된 명령어)를 해석하여 다른 블록에 전송&lt;/li&gt;
&lt;li&gt;레지스터: 각 블록이 필요로 하는 요소(명령어/피연산자)를 저장해두고 요청이 올 때 제공&lt;/li&gt;
&lt;li&gt;버스 인터페이스: 입출력 버스의 통신규약을 이해하고 명령어와 데이터를 CPU 내부로 받는 중간자 역할&lt;/li&gt;
&lt;li&gt;메인 메모리: 컴파일이 완료된 프로그램 코드가 올라가서 실행되는 영역&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;입출력 버스: 데이터를 전송하는 통로&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;어드레스 버스: 데이터의 주소값을 전달하는 버스&lt;/li&gt;
&lt;li&gt;데이터 버스: 데이터를 전달하는 버스&lt;/li&gt;
&lt;li&gt;컨트롤 버스: 어떤 것(데이터 또는 주소값)을 전달할 것인지 신호를 보내는 버스&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;클럭 신호: 가장 느린 연산의 속도에 맞춰 데이터를 이동시키는 신호&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;프로그램의-실행-과정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EA%B3%BC%EC%A0%95&quot; aria-label=&quot;프로그램의 실행 과정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로그램의 실행 과정&lt;/h2&gt;
&lt;p&gt;폰 노이만 아키텍처(Stored Program Concept) : 프로그램이 컴퓨터 내부에 저장되어 순차적으로 실행되는 구조&lt;/p&gt;
&lt;h3 id=&quot;실행파일의-생성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%ED%96%89%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;실행파일의 생성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실행파일의 생성&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;전처리기에 의한 치환 작업
: 지시자에 따라 소스코드 변경&lt;/li&gt;
&lt;li&gt;컴파일러에 의한 번역
: 소스코드를 어셈블리 코드로 번역&lt;/li&gt;
&lt;li&gt;어셈블러에 의한 바이너리 코드 생성
: 어셈블리 코드를 컴퓨터가 이해할 수 있는 바이너리 코드로 변경&lt;/li&gt;
&lt;li&gt;링커에 의한 연결과 결합
: 프로그램 내 참조 함수나 라이브러리를 연결하여 실행파일 생성&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;실행파일의-작동&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%ED%96%89%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%9E%91%EB%8F%99&quot; aria-label=&quot;실행파일의 작동 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실행파일의 작동&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fetch
: 메인 메모리에 로드된 실행파일의 명령어를 CPU로 전송&lt;/li&gt;
&lt;li&gt;Decode
: 명령어를 CPU가 연산하기 위해 해석&lt;/li&gt;
&lt;li&gt;Execution
: 해석된 명령어를 CPU가 실행&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;요약&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CPU에서 &lt;code class=&quot;language-text&quot;&gt;컨트롤 버스&lt;/code&gt;를 통해 어떤 작업을 원하는지 &lt;code class=&quot;language-text&quot;&gt;메인 메모리&lt;/code&gt;로 신호를 보낸다.&lt;/li&gt;
&lt;li&gt;메인 메모리에서 &lt;code class=&quot;language-text&quot;&gt;데이터 버스&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;어드레스 버스&lt;/code&gt;를 통해 데이터와 명령어를 전송한다.&lt;/li&gt;
&lt;li&gt;데이터와 명령어는 통신규약을 알고 있는 &lt;code class=&quot;language-text&quot;&gt;버스 인터페이스&lt;/code&gt;에 도착해서 CPU 내부로 전송된다. (Fetch)&lt;/li&gt;
&lt;li&gt;CPU 내부에서 데이터와 명령어는 &lt;code class=&quot;language-text&quot;&gt;레지스터&lt;/code&gt;에 대기 상태로 저장된다.&lt;/li&gt;
&lt;li&gt;순차적인 &lt;code class=&quot;language-text&quot;&gt;클럭 신호&lt;/code&gt;에 따라 레지스터에 저장된 명령어는 &lt;code class=&quot;language-text&quot;&gt;컨트롤 유닛&lt;/code&gt;으로 전송되어 해석(Decode)되고, 레지스터에 저장된 데이터는 &lt;code class=&quot;language-text&quot;&gt;ALU&lt;/code&gt;로 전송된다.&lt;/li&gt;
&lt;li&gt;ALU에서 명령어와 데이터로 연산이 수행된다. (Execution)&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[about]]></title><description><![CDATA[소개 업데이트 예정입니다]]></description><link>https://makeitmin.github.io/resume-en/</link><guid isPermaLink="false">https://makeitmin.github.io/resume-en/</guid><pubDate>Sun, 27 Jan 2019 16:21:13 GMT</pubDate><content:encoded>&lt;h1 id=&quot;소개&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%86%8C%EA%B0%9C&quot; aria-label=&quot;소개 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;소개&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;p&gt;&lt;em&gt;업데이트 예정입니다&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</content:encoded></item></channel></rss>