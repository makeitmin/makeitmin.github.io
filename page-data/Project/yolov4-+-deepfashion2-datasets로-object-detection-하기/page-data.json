{"componentChunkName":"component---src-templates-blog-post-js","path":"/Project/yolov4-+-deepfashion2-datasets로-object-detection-하기/","result":{"data":{"site":{"siteMetadata":{"title":"makeitmin.io","author":"Seongmin Ha","siteUrl":"https://makeitmin.github.io","comment":{"disqusShortName":"","utterances":"makeitmin/makeitmin.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"54192023-da36-5d6c-8674-b31d3c5a3116","excerpt":"이 글의 Code Snippets는 Jupyter Notebook에서 Code Shell 단위로 실행됩니다. 코드 전문은 GitHub Repository에 있습니다.   YOLO는 Darknet이라는 프레임워크를 사용합니다. Darknet은 YOLOv4 뿐 아니라 다양한 버전의 YOLO 모델을 서빙하고 있습니다. 해당 Darknet Repository의  README.md  에서는 GPU를 사용한 YOLOv4 를 학습하기 전 Darknet…","html":"<p>이 글의 Code Snippets는 Jupyter Notebook에서 Code Shell 단위로 실행됩니다. 코드 전문은 <a href=\"https://github.com/makeitmin/yolov4-deepfashion2/blob/master/YOLOv4_DeepFashion2.ipynb\">GitHub Repository</a>에 있습니다.  </p>\n<p>YOLO는 Darknet이라는 프레임워크를 사용합니다.<br>\nDarknet은 YOLOv4 뿐 아니라 다양한 버전의 YOLO 모델을 서빙하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>git clone https://github.com/AlexeyAB/darknet.git</code></pre></div>\n<p>해당 Darknet Repository의  <a href=\"https://github.com/AlexeyAB/darknet#how-to-evaluate-fps-of-yolov4-on-gpu\">README.md</a>  에서는 GPU를 사용한 YOLOv4 를 학습하기 전 Darknet 프레임워크를 초기화(빌드)하는 방법을 설명하고 있습니다.  </p>\n<h2 id=\"makefile-빌드하기\" style=\"position:relative;\"><a href=\"#makefile-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0\" aria-label=\"makefile 빌드하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Makefile 빌드하기</h2>\n<p>다음과 같이 darknet/Makefile의 앞부분을 수정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GPU=1\nCUDNN=1 \nCUDNN_HALF=1 \nOPENCV=1\nLIBSO=1</code></pre></div>\n<p>Makefile을 빌드합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">%cd darknet/\n<span class=\"token operator\">!</span>make\n<span class=\"token operator\">!</span>mkdir DeepFashion2\n%cd <span class=\"token punctuation\">..</span>/</code></pre></div>\n<h2 id=\"데이터셋-가져오기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"데이터셋 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터셋 가져오기</h2>\n<p><a href=\"https://github.com/switchablenorms/DeepFashion2\">DeepFashion2</a>  를 본인의 Google Drive 에 받는 자세한 방법은  <a href=\"https://beausty23.tistory.com/82\">링크</a>를 참고하세요.<br>\nDeepFashion2 의 데이터셋이 매우 방대하므로 이 학습에서는 Validation Set 만을 받아 Train 과 Validation으로 나누어 사용합니다.\n본인의 Google Drive 를 마운트하여,</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>colab <span class=\"token keyword\">import</span> drive\ndrive<span class=\"token punctuation\">.</span>mount<span class=\"token punctuation\">(</span><span class=\"token string\">'/content/gdrive'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://drive.google.com/drive/folders/125F48fsMBz2EF0Cpqk6aaHet5VH399Ok\">데이터셋</a>을 복사합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>cp /content/gdrive/MyDrive/validation.zip /content/darknet/DeepFashion2/validation.zip</code></pre></div>\n<p>패스워드와 함께 데이터셋의 압축을 해제합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>unzip -P <span class=\"token string\">\"패스워드\"</span> /content/darknet/DeepFashion2/validation.zip -d /content/darknet/DeepFashion2/</code></pre></div>\n<h2 id=\"annotation-format-변환하기\" style=\"position:relative;\"><a href=\"#annotation-format-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"annotation format 변환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Annotation Format 변환하기</h2>\n<p>다음은 클래스를 나누어 각각의 이미지와 그에 대응하는 클래스, 어노테이션을 묶는 validation.json 파일을 생성하는 코드입니다. 이 작업이 필요한 이유는 현재 DeepFashion2 의 Annotation Format 이 YOLOv4 가 요구하는 Format 과 맞지 않기 때문입니다.  </p>\n<p>다음과 같은 순서로 Format 을 맞출 예정입니다.</p>\n<ol>\n<li>DeepFashion2 의 Annotation Format 을 COCO Format 으로 변환</li>\n<li>COCO Format 을 YOLO Format 으로 변환</li>\n</ol>\n<p>아래 셀의 코드는 1번의 과정입니다.<br>\nDeepFashion2 의 데이터셋은 총 13개 클래스입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>mkdir /content/darknet/DeepFashion2/validation/annotations</code></pre></div>\n<p>다음 폴더를 만든 후 코드를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> json\n\ndataset <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"licenses\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"images\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"categories\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\nlst_name <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'short_sleeved_shirt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'long_sleeved_shirt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'short_sleeved_outwear'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'long_sleeved_outwear'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'vest'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sling'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'shorts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trousers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'skirt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'short_sleeved_dress'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'long_sleeved_dress'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vest_dress'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sling_dress'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> e  <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>lst_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dataset<span class=\"token punctuation\">[</span><span class=\"token string\">'categories'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> e<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'supercategory'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"clothes\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'keypoints'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'%i'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">295</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'skeleton'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nnum_images <span class=\"token operator\">=</span> <span class=\"token number\">32153</span> <span class=\"token comment\">#191961 </span>\nsub_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># the index of ground truth instance</span>\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> num_images <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    json_name <span class=\"token operator\">=</span> <span class=\"token string\">'/content/DeepFashion2/validation/annos/'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span>\n    image_name <span class=\"token operator\">=</span> <span class=\"token string\">'/content/DeepFashion2/validation/image/'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.jpg'</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        imag <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>image_name<span class=\"token punctuation\">)</span>\n        width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> imag<span class=\"token punctuation\">.</span>size\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>json_name<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            temp <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            pair_id <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span><span class=\"token string\">'pair_id'</span><span class=\"token punctuation\">]</span>\n\n            dataset<span class=\"token punctuation\">[</span><span class=\"token string\">'images'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'coco_url'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'date_captured'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'file_name'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.jpg'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'flickr_url'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> num<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'license'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'width'</span><span class=\"token punctuation\">:</span> width<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'height'</span><span class=\"token punctuation\">:</span> height\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> temp<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token string\">'source'</span> <span class=\"token keyword\">or</span> i <span class=\"token operator\">==</span> <span class=\"token string\">'pair_id'</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">continue</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    points <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">294</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n                    sub_index <span class=\"token operator\">=</span> sub_index <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n                    box <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'bounding_box'</span><span class=\"token punctuation\">]</span>\n                    w <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                    h <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n                    x_1 <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                    y_1 <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n                    bbox <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x_1<span class=\"token punctuation\">,</span> y_1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">]</span>\n                    cat <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'category_id'</span><span class=\"token punctuation\">]</span>\n                    style <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">]</span>\n                    seg <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'segmentation'</span><span class=\"token punctuation\">]</span>\n                    landmarks <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'landmarks'</span><span class=\"token punctuation\">]</span>\n\n                    points_x <span class=\"token operator\">=</span> landmarks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n                    points_y <span class=\"token operator\">=</span> landmarks<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n                    points_v <span class=\"token operator\">=</span> landmarks<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n                    points_x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>points_x<span class=\"token punctuation\">)</span>\n                    points_y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>points_y<span class=\"token punctuation\">)</span>\n                    points_v <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>points_v<span class=\"token punctuation\">)</span>\n                    case <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">294</span><span class=\"token punctuation\">]</span>\n                    idx_i<span class=\"token punctuation\">,</span> idx_j <span class=\"token operator\">=</span> case<span class=\"token punctuation\">[</span>cat <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> case<span class=\"token punctuation\">[</span>cat<span class=\"token punctuation\">]</span>\n\n                    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>idx_i<span class=\"token punctuation\">,</span> idx_j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                        points<span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> points_x<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> idx_i<span class=\"token punctuation\">]</span>\n                        points<span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> points_y<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> idx_i<span class=\"token punctuation\">]</span>\n                        points<span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> points_v<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> idx_i<span class=\"token punctuation\">]</span>\n\n                    num_points <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>points_v <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n                    dataset<span class=\"token punctuation\">[</span><span class=\"token string\">'annotations'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token string\">'area'</span><span class=\"token punctuation\">:</span> w <span class=\"token operator\">*</span> h<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'bbox'</span><span class=\"token punctuation\">:</span> bbox<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'category_id'</span><span class=\"token punctuation\">:</span> cat<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> sub_index<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'pair_id'</span><span class=\"token punctuation\">:</span> pair_id<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'image_id'</span><span class=\"token punctuation\">:</span> num<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'iscrowd'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'style'</span><span class=\"token punctuation\">:</span> style<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'num_keypoints'</span><span class=\"token punctuation\">:</span> num_points<span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'keypoints'</span><span class=\"token punctuation\">:</span> points<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">'segmentation'</span><span class=\"token punctuation\">:</span> seg<span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\njson_name <span class=\"token operator\">=</span> <span class=\"token string\">'/content/darknet/DeepFashion2/validation/validation.json'</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>json_name<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>dataset<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span></code></pre></div>\n<p>YOLO Format 의 Annotations 가 저장될 폴더를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">%cd /content/darknet/DeepFashion2\n<span class=\"token operator\">!</span>mkdir YOLO/</code></pre></div>\n<p>아래 셀의 코드는 2번의 과정입니다.<br>\nDeepFashion2 폴더 내에 다음 2개의 파일을 추가한 후 실행해야 합니다.</p>\n<ol>\n<li><a href=\"https://github.com/ssaru/convert2Yolo/blob/master/example.py\">example.py</a></li>\n<li><a href=\"https://github.com/ssaru/convert2Yolo/blob/master/Format.py\">Format.py</a></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>python ./example.py --datasets COCO --img_path ./validation/image/ --label ./validation/annotations/validation.json --convert_output_path ./YOLO/ --img_type <span class=\"token string\">\".jpg\"</span> --manifest_path ./validation/ --cls_list_file ./validation/deepfashion2.names</code></pre></div>\n<p>위 작업이 끝나면 다음의 것들이 생성됩니다.</p>\n<ul>\n<li>YOLO/*.txt : 이미지별 바운딩 좌표가 Yolo Format 으로 변환되어 있습니다.</li>\n<li>manifest.txt : 모든 이미지의 경로를 모아 놓은 파일입니다.</li>\n</ul>\n<h2 id=\"데이터-전처리하기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"데이터 전처리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 전처리하기</h2>\n<p>데이터를 shuffle 하는 코드입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random \ntxt <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/content/darknet/DeepFashion2/validation/manifest.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> \nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/content/darknet/DeepFashion2/validation/manifest_shuffle.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> \ntmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> \n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span> \n  line <span class=\"token operator\">=</span> txt<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line<span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">break</span> \n  tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> \nrandom<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tmp <span class=\"token punctuation\">:</span> \n  f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> \ntxt<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>shuffle 된 데이터셋을 Train 과 Validation 으로 나누는 코드입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">count <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nlength <span class=\"token operator\">=</span> <span class=\"token number\">37205</span> <span class=\"token comment\">#total line </span>\ntxt <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/content/darknet/DeepFashion2/validation/manifest_shuffle.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> \ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/content/darknet/custom/train.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> \nf2 <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/content/darknet/custom/validation.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span> \n  <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> \n    line <span class=\"token operator\">=</span> txt<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line <span class=\"token punctuation\">:</span> \n      <span class=\"token keyword\">break</span> \n    count <span class=\"token operator\">+=</span><span class=\"token number\">1</span> \n    <span class=\"token keyword\">if</span> count <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>length<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> \n      f2<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> \n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span> \n      f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> \ntxt<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \nf2<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"yolov4-학습하기\" style=\"position:relative;\"><a href=\"#yolov4-%ED%95%99%EC%8A%B5%ED%95%98%EA%B8%B0\" aria-label=\"yolov4 학습하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>YOLOv4 학습하기</h2>\n<p>첫 학습에 사용할 초기 모델로 yolov4.conv.137 을 가져옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>gdown --id 1JKF-bdIklxOOVy-2Cr5qdvjgGpmGfcbp -O /content/darknet/yolov4.conv.137</code></pre></div>\n<p>darknet 폴더로 이동합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">%cd /content/darknet</code></pre></div>\n<p>YOLOv4 학습을 시작합니다. 학습된 weights 파일은 .data에서 설정한 경로에 저장됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">!</span>./darknet detector train custom/custom.data cfg/yolov4.cfg yolov4.conv.137 -map -dont_show</code></pre></div>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li>Use YOLOv4 to train the DeepFashion2 Dataset (<a href=\"https://www.programmersought.com/article/74557705857/\">문서</a>)</li>\n<li>Darknet 학습 준비하기 (<a href=\"https://eehoeskrap.tistory.com/367\">블로그</a>)</li>\n<li>YOLOv4 custom 데이터 훈련하기 (<a href=\"https://keyog.tistory.com/22?category=879585\">블로그</a>)</li>\n<li>Colab에서 Detectron2로 의류 인식하기 (<a href=\"https://airsbigdata.tistory.com/208\">블로그</a>)</li>\n<li>ssaru/convert2Yolo (<a href=\"https://github.com/ssaru/convert2Yolo\">GitHub</a>)</li>\n</ul>","frontmatter":{"title":"YOLOv4 + DeepFashion2로 Object Detection 학습하기","date":"2021-05-25"}}},"pageContext":{"slug":"/Project/yolov4-+-deepfashion2-datasets로-object-detection-하기/","previous":{"fields":{"slug":"/Project/docker-+-gatsby-+-github-pages로-블로그-만들기/"},"frontmatter":{"title":"Docker + Gatsby + GitHub Pages로 블로그 만들기"}},"next":{"fields":{"slug":"/Computer Science/컴퓨터-구조에-대한-첫-번째-이야기/"},"frontmatter":{"title":"컴퓨터 구조에 대한 첫 번째 이야기"}}}}}